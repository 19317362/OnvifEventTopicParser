/* soapAnalyticsDeviceBindingService.cpp
   Generated by gSOAP 2.8.66 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapAnalyticsDeviceBindingService.h"

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService() : soap(SOAP_IO_DEFAULT)
{	AnalyticsDeviceBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(const AnalyticsDeviceBindingService& rhs)
{	soap_copy_context(this, &rhs);
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(const struct soap &_soap) : soap(_soap)
{ }

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(soap_mode iomode) : soap(iomode)
{	AnalyticsDeviceBindingService_init(iomode, iomode);
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	AnalyticsDeviceBindingService_init(imode, omode);
}

AnalyticsDeviceBindingService::~AnalyticsDeviceBindingService()
{
	this->destroy();
}

void AnalyticsDeviceBindingService::AnalyticsDeviceBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver20/analytics", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver20/analytics/radiometry", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver10/network/wsdl/", NULL, NULL},
        {"ns13", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"ns14", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"ns6", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

void AnalyticsDeviceBindingService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void AnalyticsDeviceBindingService::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	AnalyticsDeviceBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
AnalyticsDeviceBindingService *AnalyticsDeviceBindingService::copy()
{	AnalyticsDeviceBindingService *dup = SOAP_NEW_UNMANAGED(AnalyticsDeviceBindingService(*(struct soap*)this));
	return dup;
}
#endif

AnalyticsDeviceBindingService& AnalyticsDeviceBindingService::operator=(const AnalyticsDeviceBindingService& rhs)
{	soap_done(this);
	soap_copy_context(this, &rhs);
	return *this;
}

int AnalyticsDeviceBindingService::soap_close_socket()
{	return soap_closesock(this);
}

int AnalyticsDeviceBindingService::soap_force_close_socket()
{	return soap_force_closesock(this);
}

int AnalyticsDeviceBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int AnalyticsDeviceBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int AnalyticsDeviceBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int AnalyticsDeviceBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void AnalyticsDeviceBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AnalyticsDeviceBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *AnalyticsDeviceBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void AnalyticsDeviceBindingService::soap_noheader()
{	this->header = NULL;
}

void AnalyticsDeviceBindingService::soap_header(struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence)
{	::soap_header(this);
	this->header->wsse__Security = wsse__Security;
	this->header->wsa5__MessageID = wsa5__MessageID;
	this->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->header->wsa5__From = wsa5__From;
	this->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->header->wsa5__FaultTo = wsa5__FaultTo;
	this->header->wsa5__To = wsa5__To;
	this->header->wsa5__Action = wsa5__Action;
	this->header->chan__ChannelInstance = chan__ChannelInstance;
	this->header->wsdd__AppSequence = wsdd__AppSequence;
}

::SOAP_ENV__Header *AnalyticsDeviceBindingService::soap_header()
{	return this->header;
}

#ifndef WITH_NOIO
int AnalyticsDeviceBindingService::run(int port)
{	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int AnalyticsDeviceBindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->error;
}
#endif

SOAP_SOCKET AnalyticsDeviceBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET AnalyticsDeviceBindingService::accept()
{	return soap_accept(this);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int AnalyticsDeviceBindingService::ssl_accept()
{	return soap_ssl_accept(this);
}
#endif
#endif

int AnalyticsDeviceBindingService::serve()
{
#ifndef WITH_FASTCGI
	this->keep_alive = this->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->keep_alive > 0 && this->max_keep_alive > 0)
			this->keep_alive--;
#endif
		if (soap_begin_serve(this))
		{	if (this->error >= SOAP_STOP)
				continue;
			return this->error;
		}
		if ((dispatch() || (this->fserveloop && this->fserveloop(this))) && this->error && this->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___tad__GetServiceCapabilities(AnalyticsDeviceBindingService*);
static int serve___tad__DeleteAnalyticsEngineControl(AnalyticsDeviceBindingService*);
static int serve___tad__CreateAnalyticsEngineControl(AnalyticsDeviceBindingService*);
static int serve___tad__SetAnalyticsEngineControl(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsEngineControl(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsEngineControls(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsEngine(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsEngines(AnalyticsDeviceBindingService*);
static int serve___tad__SetVideoAnalyticsConfiguration(AnalyticsDeviceBindingService*);
static int serve___tad__SetAnalyticsEngineInput(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsEngineInput(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsEngineInputs(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsDeviceStreamUri(AnalyticsDeviceBindingService*);
static int serve___tad__GetVideoAnalyticsConfiguration(AnalyticsDeviceBindingService*);
static int serve___tad__CreateAnalyticsEngineInputs(AnalyticsDeviceBindingService*);
static int serve___tad__DeleteAnalyticsEngineInputs(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsState(AnalyticsDeviceBindingService*);

int AnalyticsDeviceBindingService::dispatch()
{
	soap_peek_element(this);
	if (!soap_match_tag(this, this->tag, "tad:GetServiceCapabilities"))
		return serve___tad__GetServiceCapabilities(this);
	if (!soap_match_tag(this, this->tag, "tad:DeleteAnalyticsEngineControl"))
		return serve___tad__DeleteAnalyticsEngineControl(this);
	if (!soap_match_tag(this, this->tag, "tad:CreateAnalyticsEngineControl"))
		return serve___tad__CreateAnalyticsEngineControl(this);
	if (!soap_match_tag(this, this->tag, "tad:SetAnalyticsEngineControl"))
		return serve___tad__SetAnalyticsEngineControl(this);
	if (!soap_match_tag(this, this->tag, "tad:GetAnalyticsEngineControl"))
		return serve___tad__GetAnalyticsEngineControl(this);
	if (!soap_match_tag(this, this->tag, "tad:GetAnalyticsEngineControls"))
		return serve___tad__GetAnalyticsEngineControls(this);
	if (!soap_match_tag(this, this->tag, "tad:GetAnalyticsEngine"))
		return serve___tad__GetAnalyticsEngine(this);
	if (!soap_match_tag(this, this->tag, "tad:GetAnalyticsEngines"))
		return serve___tad__GetAnalyticsEngines(this);
	if (!soap_match_tag(this, this->tag, "tad:SetVideoAnalyticsConfiguration"))
		return serve___tad__SetVideoAnalyticsConfiguration(this);
	if (!soap_match_tag(this, this->tag, "tad:SetAnalyticsEngineInput"))
		return serve___tad__SetAnalyticsEngineInput(this);
	if (!soap_match_tag(this, this->tag, "tad:GetAnalyticsEngineInput"))
		return serve___tad__GetAnalyticsEngineInput(this);
	if (!soap_match_tag(this, this->tag, "tad:GetAnalyticsEngineInputs"))
		return serve___tad__GetAnalyticsEngineInputs(this);
	if (!soap_match_tag(this, this->tag, "tad:GetAnalyticsDeviceStreamUri"))
		return serve___tad__GetAnalyticsDeviceStreamUri(this);
	if (!soap_match_tag(this, this->tag, "tad:GetVideoAnalyticsConfiguration"))
		return serve___tad__GetVideoAnalyticsConfiguration(this);
	if (!soap_match_tag(this, this->tag, "tad:CreateAnalyticsEngineInputs"))
		return serve___tad__CreateAnalyticsEngineInputs(this);
	if (!soap_match_tag(this, this->tag, "tad:DeleteAnalyticsEngineInputs"))
		return serve___tad__DeleteAnalyticsEngineInputs(this);
	if (!soap_match_tag(this, this->tag, "tad:GetAnalyticsState"))
		return serve___tad__GetAnalyticsState(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve___tad__GetServiceCapabilities(AnalyticsDeviceBindingService *soap)
{	struct __tad__GetServiceCapabilities soap_tmp___tad__GetServiceCapabilities;
	_tad__GetServiceCapabilitiesResponse tad__GetServiceCapabilitiesResponse;
	tad__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___tad__GetServiceCapabilities(soap, &soap_tmp___tad__GetServiceCapabilities);
	if (!soap_get___tad__GetServiceCapabilities(soap, &soap_tmp___tad__GetServiceCapabilities, "-tad:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetServiceCapabilities(soap_tmp___tad__GetServiceCapabilities.tad__GetServiceCapabilities, tad__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetServiceCapabilitiesResponse.soap_put(soap, "tad:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetServiceCapabilitiesResponse.soap_put(soap, "tad:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__DeleteAnalyticsEngineControl(AnalyticsDeviceBindingService *soap)
{	struct __tad__DeleteAnalyticsEngineControl soap_tmp___tad__DeleteAnalyticsEngineControl;
	_tad__DeleteAnalyticsEngineControlResponse tad__DeleteAnalyticsEngineControlResponse;
	tad__DeleteAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___tad__DeleteAnalyticsEngineControl(soap, &soap_tmp___tad__DeleteAnalyticsEngineControl);
	if (!soap_get___tad__DeleteAnalyticsEngineControl(soap, &soap_tmp___tad__DeleteAnalyticsEngineControl, "-tad:DeleteAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteAnalyticsEngineControl(soap_tmp___tad__DeleteAnalyticsEngineControl.tad__DeleteAnalyticsEngineControl, tad__DeleteAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__DeleteAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__DeleteAnalyticsEngineControlResponse.soap_put(soap, "tad:DeleteAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__DeleteAnalyticsEngineControlResponse.soap_put(soap, "tad:DeleteAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__CreateAnalyticsEngineControl(AnalyticsDeviceBindingService *soap)
{	struct __tad__CreateAnalyticsEngineControl soap_tmp___tad__CreateAnalyticsEngineControl;
	_tad__CreateAnalyticsEngineControlResponse tad__CreateAnalyticsEngineControlResponse;
	tad__CreateAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___tad__CreateAnalyticsEngineControl(soap, &soap_tmp___tad__CreateAnalyticsEngineControl);
	if (!soap_get___tad__CreateAnalyticsEngineControl(soap, &soap_tmp___tad__CreateAnalyticsEngineControl, "-tad:CreateAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateAnalyticsEngineControl(soap_tmp___tad__CreateAnalyticsEngineControl.tad__CreateAnalyticsEngineControl, tad__CreateAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__CreateAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__CreateAnalyticsEngineControlResponse.soap_put(soap, "tad:CreateAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__CreateAnalyticsEngineControlResponse.soap_put(soap, "tad:CreateAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__SetAnalyticsEngineControl(AnalyticsDeviceBindingService *soap)
{	struct __tad__SetAnalyticsEngineControl soap_tmp___tad__SetAnalyticsEngineControl;
	_tad__SetAnalyticsEngineControlResponse tad__SetAnalyticsEngineControlResponse;
	tad__SetAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___tad__SetAnalyticsEngineControl(soap, &soap_tmp___tad__SetAnalyticsEngineControl);
	if (!soap_get___tad__SetAnalyticsEngineControl(soap, &soap_tmp___tad__SetAnalyticsEngineControl, "-tad:SetAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetAnalyticsEngineControl(soap_tmp___tad__SetAnalyticsEngineControl.tad__SetAnalyticsEngineControl, tad__SetAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__SetAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__SetAnalyticsEngineControlResponse.soap_put(soap, "tad:SetAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__SetAnalyticsEngineControlResponse.soap_put(soap, "tad:SetAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsEngineControl(AnalyticsDeviceBindingService *soap)
{	struct __tad__GetAnalyticsEngineControl soap_tmp___tad__GetAnalyticsEngineControl;
	_tad__GetAnalyticsEngineControlResponse tad__GetAnalyticsEngineControlResponse;
	tad__GetAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsEngineControl(soap, &soap_tmp___tad__GetAnalyticsEngineControl);
	if (!soap_get___tad__GetAnalyticsEngineControl(soap, &soap_tmp___tad__GetAnalyticsEngineControl, "-tad:GetAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAnalyticsEngineControl(soap_tmp___tad__GetAnalyticsEngineControl.tad__GetAnalyticsEngineControl, tad__GetAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsEngineControlResponse.soap_put(soap, "tad:GetAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsEngineControlResponse.soap_put(soap, "tad:GetAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsEngineControls(AnalyticsDeviceBindingService *soap)
{	struct __tad__GetAnalyticsEngineControls soap_tmp___tad__GetAnalyticsEngineControls;
	_tad__GetAnalyticsEngineControlsResponse tad__GetAnalyticsEngineControlsResponse;
	tad__GetAnalyticsEngineControlsResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsEngineControls(soap, &soap_tmp___tad__GetAnalyticsEngineControls);
	if (!soap_get___tad__GetAnalyticsEngineControls(soap, &soap_tmp___tad__GetAnalyticsEngineControls, "-tad:GetAnalyticsEngineControls", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAnalyticsEngineControls(soap_tmp___tad__GetAnalyticsEngineControls.tad__GetAnalyticsEngineControls, tad__GetAnalyticsEngineControlsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsEngineControlsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsEngineControlsResponse.soap_put(soap, "tad:GetAnalyticsEngineControlsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsEngineControlsResponse.soap_put(soap, "tad:GetAnalyticsEngineControlsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsEngine(AnalyticsDeviceBindingService *soap)
{	struct __tad__GetAnalyticsEngine soap_tmp___tad__GetAnalyticsEngine;
	_tad__GetAnalyticsEngineResponse tad__GetAnalyticsEngineResponse;
	tad__GetAnalyticsEngineResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsEngine(soap, &soap_tmp___tad__GetAnalyticsEngine);
	if (!soap_get___tad__GetAnalyticsEngine(soap, &soap_tmp___tad__GetAnalyticsEngine, "-tad:GetAnalyticsEngine", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAnalyticsEngine(soap_tmp___tad__GetAnalyticsEngine.tad__GetAnalyticsEngine, tad__GetAnalyticsEngineResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsEngineResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsEngineResponse.soap_put(soap, "tad:GetAnalyticsEngineResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsEngineResponse.soap_put(soap, "tad:GetAnalyticsEngineResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsEngines(AnalyticsDeviceBindingService *soap)
{	struct __tad__GetAnalyticsEngines soap_tmp___tad__GetAnalyticsEngines;
	_tad__GetAnalyticsEnginesResponse tad__GetAnalyticsEnginesResponse;
	tad__GetAnalyticsEnginesResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsEngines(soap, &soap_tmp___tad__GetAnalyticsEngines);
	if (!soap_get___tad__GetAnalyticsEngines(soap, &soap_tmp___tad__GetAnalyticsEngines, "-tad:GetAnalyticsEngines", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAnalyticsEngines(soap_tmp___tad__GetAnalyticsEngines.tad__GetAnalyticsEngines, tad__GetAnalyticsEnginesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsEnginesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsEnginesResponse.soap_put(soap, "tad:GetAnalyticsEnginesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsEnginesResponse.soap_put(soap, "tad:GetAnalyticsEnginesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__SetVideoAnalyticsConfiguration(AnalyticsDeviceBindingService *soap)
{	struct __tad__SetVideoAnalyticsConfiguration soap_tmp___tad__SetVideoAnalyticsConfiguration;
	_tad__SetVideoAnalyticsConfigurationResponse tad__SetVideoAnalyticsConfigurationResponse;
	tad__SetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___tad__SetVideoAnalyticsConfiguration(soap, &soap_tmp___tad__SetVideoAnalyticsConfiguration);
	if (!soap_get___tad__SetVideoAnalyticsConfiguration(soap, &soap_tmp___tad__SetVideoAnalyticsConfiguration, "-tad:SetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetVideoAnalyticsConfiguration(soap_tmp___tad__SetVideoAnalyticsConfiguration.tad__SetVideoAnalyticsConfiguration, tad__SetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__SetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "tad:SetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "tad:SetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__SetAnalyticsEngineInput(AnalyticsDeviceBindingService *soap)
{	struct __tad__SetAnalyticsEngineInput soap_tmp___tad__SetAnalyticsEngineInput;
	_tad__SetAnalyticsEngineInputResponse tad__SetAnalyticsEngineInputResponse;
	tad__SetAnalyticsEngineInputResponse.soap_default(soap);
	soap_default___tad__SetAnalyticsEngineInput(soap, &soap_tmp___tad__SetAnalyticsEngineInput);
	if (!soap_get___tad__SetAnalyticsEngineInput(soap, &soap_tmp___tad__SetAnalyticsEngineInput, "-tad:SetAnalyticsEngineInput", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetAnalyticsEngineInput(soap_tmp___tad__SetAnalyticsEngineInput.tad__SetAnalyticsEngineInput, tad__SetAnalyticsEngineInputResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__SetAnalyticsEngineInputResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__SetAnalyticsEngineInputResponse.soap_put(soap, "tad:SetAnalyticsEngineInputResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__SetAnalyticsEngineInputResponse.soap_put(soap, "tad:SetAnalyticsEngineInputResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsEngineInput(AnalyticsDeviceBindingService *soap)
{	struct __tad__GetAnalyticsEngineInput soap_tmp___tad__GetAnalyticsEngineInput;
	_tad__GetAnalyticsEngineInputResponse tad__GetAnalyticsEngineInputResponse;
	tad__GetAnalyticsEngineInputResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsEngineInput(soap, &soap_tmp___tad__GetAnalyticsEngineInput);
	if (!soap_get___tad__GetAnalyticsEngineInput(soap, &soap_tmp___tad__GetAnalyticsEngineInput, "-tad:GetAnalyticsEngineInput", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAnalyticsEngineInput(soap_tmp___tad__GetAnalyticsEngineInput.tad__GetAnalyticsEngineInput, tad__GetAnalyticsEngineInputResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsEngineInputResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsEngineInputResponse.soap_put(soap, "tad:GetAnalyticsEngineInputResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsEngineInputResponse.soap_put(soap, "tad:GetAnalyticsEngineInputResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsEngineInputs(AnalyticsDeviceBindingService *soap)
{	struct __tad__GetAnalyticsEngineInputs soap_tmp___tad__GetAnalyticsEngineInputs;
	_tad__GetAnalyticsEngineInputsResponse tad__GetAnalyticsEngineInputsResponse;
	tad__GetAnalyticsEngineInputsResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsEngineInputs(soap, &soap_tmp___tad__GetAnalyticsEngineInputs);
	if (!soap_get___tad__GetAnalyticsEngineInputs(soap, &soap_tmp___tad__GetAnalyticsEngineInputs, "-tad:GetAnalyticsEngineInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAnalyticsEngineInputs(soap_tmp___tad__GetAnalyticsEngineInputs.tad__GetAnalyticsEngineInputs, tad__GetAnalyticsEngineInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsEngineInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsEngineInputsResponse.soap_put(soap, "tad:GetAnalyticsEngineInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsEngineInputsResponse.soap_put(soap, "tad:GetAnalyticsEngineInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsDeviceStreamUri(AnalyticsDeviceBindingService *soap)
{	struct __tad__GetAnalyticsDeviceStreamUri soap_tmp___tad__GetAnalyticsDeviceStreamUri;
	_tad__GetAnalyticsDeviceStreamUriResponse tad__GetAnalyticsDeviceStreamUriResponse;
	tad__GetAnalyticsDeviceStreamUriResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsDeviceStreamUri(soap, &soap_tmp___tad__GetAnalyticsDeviceStreamUri);
	if (!soap_get___tad__GetAnalyticsDeviceStreamUri(soap, &soap_tmp___tad__GetAnalyticsDeviceStreamUri, "-tad:GetAnalyticsDeviceStreamUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAnalyticsDeviceStreamUri(soap_tmp___tad__GetAnalyticsDeviceStreamUri.tad__GetAnalyticsDeviceStreamUri, tad__GetAnalyticsDeviceStreamUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsDeviceStreamUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsDeviceStreamUriResponse.soap_put(soap, "tad:GetAnalyticsDeviceStreamUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsDeviceStreamUriResponse.soap_put(soap, "tad:GetAnalyticsDeviceStreamUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetVideoAnalyticsConfiguration(AnalyticsDeviceBindingService *soap)
{	struct __tad__GetVideoAnalyticsConfiguration soap_tmp___tad__GetVideoAnalyticsConfiguration;
	_tad__GetVideoAnalyticsConfigurationResponse tad__GetVideoAnalyticsConfigurationResponse;
	tad__GetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___tad__GetVideoAnalyticsConfiguration(soap, &soap_tmp___tad__GetVideoAnalyticsConfiguration);
	if (!soap_get___tad__GetVideoAnalyticsConfiguration(soap, &soap_tmp___tad__GetVideoAnalyticsConfiguration, "-tad:GetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoAnalyticsConfiguration(soap_tmp___tad__GetVideoAnalyticsConfiguration.tad__GetVideoAnalyticsConfiguration, tad__GetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "tad:GetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "tad:GetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__CreateAnalyticsEngineInputs(AnalyticsDeviceBindingService *soap)
{	struct __tad__CreateAnalyticsEngineInputs soap_tmp___tad__CreateAnalyticsEngineInputs;
	_tad__CreateAnalyticsEngineInputsResponse tad__CreateAnalyticsEngineInputsResponse;
	tad__CreateAnalyticsEngineInputsResponse.soap_default(soap);
	soap_default___tad__CreateAnalyticsEngineInputs(soap, &soap_tmp___tad__CreateAnalyticsEngineInputs);
	if (!soap_get___tad__CreateAnalyticsEngineInputs(soap, &soap_tmp___tad__CreateAnalyticsEngineInputs, "-tad:CreateAnalyticsEngineInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateAnalyticsEngineInputs(soap_tmp___tad__CreateAnalyticsEngineInputs.tad__CreateAnalyticsEngineInputs, tad__CreateAnalyticsEngineInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__CreateAnalyticsEngineInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__CreateAnalyticsEngineInputsResponse.soap_put(soap, "tad:CreateAnalyticsEngineInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__CreateAnalyticsEngineInputsResponse.soap_put(soap, "tad:CreateAnalyticsEngineInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__DeleteAnalyticsEngineInputs(AnalyticsDeviceBindingService *soap)
{	struct __tad__DeleteAnalyticsEngineInputs soap_tmp___tad__DeleteAnalyticsEngineInputs;
	_tad__DeleteAnalyticsEngineInputsResponse tad__DeleteAnalyticsEngineInputsResponse;
	tad__DeleteAnalyticsEngineInputsResponse.soap_default(soap);
	soap_default___tad__DeleteAnalyticsEngineInputs(soap, &soap_tmp___tad__DeleteAnalyticsEngineInputs);
	if (!soap_get___tad__DeleteAnalyticsEngineInputs(soap, &soap_tmp___tad__DeleteAnalyticsEngineInputs, "-tad:DeleteAnalyticsEngineInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteAnalyticsEngineInputs(soap_tmp___tad__DeleteAnalyticsEngineInputs.tad__DeleteAnalyticsEngineInputs, tad__DeleteAnalyticsEngineInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__DeleteAnalyticsEngineInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__DeleteAnalyticsEngineInputsResponse.soap_put(soap, "tad:DeleteAnalyticsEngineInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__DeleteAnalyticsEngineInputsResponse.soap_put(soap, "tad:DeleteAnalyticsEngineInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsState(AnalyticsDeviceBindingService *soap)
{	struct __tad__GetAnalyticsState soap_tmp___tad__GetAnalyticsState;
	_tad__GetAnalyticsStateResponse tad__GetAnalyticsStateResponse;
	tad__GetAnalyticsStateResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsState(soap, &soap_tmp___tad__GetAnalyticsState);
	if (!soap_get___tad__GetAnalyticsState(soap, &soap_tmp___tad__GetAnalyticsState, "-tad:GetAnalyticsState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAnalyticsState(soap_tmp___tad__GetAnalyticsState.tad__GetAnalyticsState, tad__GetAnalyticsStateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsStateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsStateResponse.soap_put(soap, "tad:GetAnalyticsStateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsStateResponse.soap_put(soap, "tad:GetAnalyticsStateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
