/* soapCredentialBindingService.cpp
   Generated by gSOAP 2.8.66 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapCredentialBindingService.h"

CredentialBindingService::CredentialBindingService() : soap(SOAP_IO_DEFAULT)
{	CredentialBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

CredentialBindingService::CredentialBindingService(const CredentialBindingService& rhs)
{	soap_copy_context(this, &rhs);
}

CredentialBindingService::CredentialBindingService(const struct soap &_soap) : soap(_soap)
{ }

CredentialBindingService::CredentialBindingService(soap_mode iomode) : soap(iomode)
{	CredentialBindingService_init(iomode, iomode);
}

CredentialBindingService::CredentialBindingService(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	CredentialBindingService_init(imode, omode);
}

CredentialBindingService::~CredentialBindingService()
{
	this->destroy();
}

void CredentialBindingService::CredentialBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver20/analytics", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver20/analytics/radiometry", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver10/network/wsdl/", NULL, NULL},
        {"ns13", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"ns14", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"ns6", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

void CredentialBindingService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void CredentialBindingService::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	CredentialBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
CredentialBindingService *CredentialBindingService::copy()
{	CredentialBindingService *dup = SOAP_NEW_UNMANAGED(CredentialBindingService(*(struct soap*)this));
	return dup;
}
#endif

CredentialBindingService& CredentialBindingService::operator=(const CredentialBindingService& rhs)
{	soap_done(this);
	soap_copy_context(this, &rhs);
	return *this;
}

int CredentialBindingService::soap_close_socket()
{	return soap_closesock(this);
}

int CredentialBindingService::soap_force_close_socket()
{	return soap_force_closesock(this);
}

int CredentialBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int CredentialBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int CredentialBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int CredentialBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void CredentialBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void CredentialBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *CredentialBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void CredentialBindingService::soap_noheader()
{	this->header = NULL;
}

void CredentialBindingService::soap_header(struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence)
{	::soap_header(this);
	this->header->wsse__Security = wsse__Security;
	this->header->wsa5__MessageID = wsa5__MessageID;
	this->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->header->wsa5__From = wsa5__From;
	this->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->header->wsa5__FaultTo = wsa5__FaultTo;
	this->header->wsa5__To = wsa5__To;
	this->header->wsa5__Action = wsa5__Action;
	this->header->chan__ChannelInstance = chan__ChannelInstance;
	this->header->wsdd__AppSequence = wsdd__AppSequence;
}

::SOAP_ENV__Header *CredentialBindingService::soap_header()
{	return this->header;
}

#ifndef WITH_NOIO
int CredentialBindingService::run(int port)
{	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int CredentialBindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->error;
}
#endif

SOAP_SOCKET CredentialBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET CredentialBindingService::accept()
{	return soap_accept(this);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int CredentialBindingService::ssl_accept()
{	return soap_ssl_accept(this);
}
#endif
#endif

int CredentialBindingService::serve()
{
#ifndef WITH_FASTCGI
	this->keep_alive = this->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->keep_alive > 0 && this->max_keep_alive > 0)
			this->keep_alive--;
#endif
		if (soap_begin_serve(this))
		{	if (this->error >= SOAP_STOP)
				continue;
			return this->error;
		}
		if ((dispatch() || (this->fserveloop && this->fserveloop(this))) && this->error && this->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___ns6__GetServiceCapabilities(CredentialBindingService*);
static int serve___ns6__GetSupportedFormatTypes(CredentialBindingService*);
static int serve___ns6__GetCredentialInfo(CredentialBindingService*);
static int serve___ns6__GetCredentialInfoList(CredentialBindingService*);
static int serve___ns6__GetCredentials(CredentialBindingService*);
static int serve___ns6__GetCredentialList(CredentialBindingService*);
static int serve___ns6__CreateCredential(CredentialBindingService*);
static int serve___ns6__ModifyCredential(CredentialBindingService*);
static int serve___ns6__DeleteCredential(CredentialBindingService*);
static int serve___ns6__GetCredentialState(CredentialBindingService*);
static int serve___ns6__EnableCredential(CredentialBindingService*);
static int serve___ns6__DisableCredential(CredentialBindingService*);
static int serve___ns6__ResetAntipassbackViolation(CredentialBindingService*);
static int serve___ns6__GetCredentialIdentifiers(CredentialBindingService*);
static int serve___ns6__SetCredentialIdentifier(CredentialBindingService*);
static int serve___ns6__DeleteCredentialIdentifier(CredentialBindingService*);
static int serve___ns6__GetCredentialAccessProfiles(CredentialBindingService*);
static int serve___ns6__SetCredentialAccessProfiles(CredentialBindingService*);
static int serve___ns6__DeleteCredentialAccessProfiles(CredentialBindingService*);

int CredentialBindingService::dispatch()
{
	soap_peek_element(this);
	if (!soap_match_tag(this, this->tag, "ns6:GetServiceCapabilities"))
		return serve___ns6__GetServiceCapabilities(this);
	if (!soap_match_tag(this, this->tag, "ns6:GetSupportedFormatTypes"))
		return serve___ns6__GetSupportedFormatTypes(this);
	if (!soap_match_tag(this, this->tag, "ns6:GetCredentialInfo"))
		return serve___ns6__GetCredentialInfo(this);
	if (!soap_match_tag(this, this->tag, "ns6:GetCredentialInfoList"))
		return serve___ns6__GetCredentialInfoList(this);
	if (!soap_match_tag(this, this->tag, "ns6:GetCredentials"))
		return serve___ns6__GetCredentials(this);
	if (!soap_match_tag(this, this->tag, "ns6:GetCredentialList"))
		return serve___ns6__GetCredentialList(this);
	if (!soap_match_tag(this, this->tag, "ns6:CreateCredential"))
		return serve___ns6__CreateCredential(this);
	if (!soap_match_tag(this, this->tag, "ns6:ModifyCredential"))
		return serve___ns6__ModifyCredential(this);
	if (!soap_match_tag(this, this->tag, "ns6:DeleteCredential"))
		return serve___ns6__DeleteCredential(this);
	if (!soap_match_tag(this, this->tag, "ns6:GetCredentialState"))
		return serve___ns6__GetCredentialState(this);
	if (!soap_match_tag(this, this->tag, "ns6:EnableCredential"))
		return serve___ns6__EnableCredential(this);
	if (!soap_match_tag(this, this->tag, "ns6:DisableCredential"))
		return serve___ns6__DisableCredential(this);
	if (!soap_match_tag(this, this->tag, "ns6:ResetAntipassbackViolation"))
		return serve___ns6__ResetAntipassbackViolation(this);
	if (!soap_match_tag(this, this->tag, "ns6:GetCredentialIdentifiers"))
		return serve___ns6__GetCredentialIdentifiers(this);
	if (!soap_match_tag(this, this->tag, "ns6:SetCredentialIdentifier"))
		return serve___ns6__SetCredentialIdentifier(this);
	if (!soap_match_tag(this, this->tag, "ns6:DeleteCredentialIdentifier"))
		return serve___ns6__DeleteCredentialIdentifier(this);
	if (!soap_match_tag(this, this->tag, "ns6:GetCredentialAccessProfiles"))
		return serve___ns6__GetCredentialAccessProfiles(this);
	if (!soap_match_tag(this, this->tag, "ns6:SetCredentialAccessProfiles"))
		return serve___ns6__SetCredentialAccessProfiles(this);
	if (!soap_match_tag(this, this->tag, "ns6:DeleteCredentialAccessProfiles"))
		return serve___ns6__DeleteCredentialAccessProfiles(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve___ns6__GetServiceCapabilities(CredentialBindingService *soap)
{	struct __ns6__GetServiceCapabilities soap_tmp___ns6__GetServiceCapabilities;
	_ns6__GetServiceCapabilitiesResponse ns6__GetServiceCapabilitiesResponse;
	ns6__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___ns6__GetServiceCapabilities(soap, &soap_tmp___ns6__GetServiceCapabilities);
	if (!soap_get___ns6__GetServiceCapabilities(soap, &soap_tmp___ns6__GetServiceCapabilities, "-ns6:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetServiceCapabilities(soap_tmp___ns6__GetServiceCapabilities.ns6__GetServiceCapabilities, ns6__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__GetServiceCapabilitiesResponse.soap_put(soap, "ns6:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__GetServiceCapabilitiesResponse.soap_put(soap, "ns6:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__GetSupportedFormatTypes(CredentialBindingService *soap)
{	struct __ns6__GetSupportedFormatTypes soap_tmp___ns6__GetSupportedFormatTypes;
	_ns6__GetSupportedFormatTypesResponse ns6__GetSupportedFormatTypesResponse;
	ns6__GetSupportedFormatTypesResponse.soap_default(soap);
	soap_default___ns6__GetSupportedFormatTypes(soap, &soap_tmp___ns6__GetSupportedFormatTypes);
	if (!soap_get___ns6__GetSupportedFormatTypes(soap, &soap_tmp___ns6__GetSupportedFormatTypes, "-ns6:GetSupportedFormatTypes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSupportedFormatTypes(soap_tmp___ns6__GetSupportedFormatTypes.ns6__GetSupportedFormatTypes, ns6__GetSupportedFormatTypesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__GetSupportedFormatTypesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__GetSupportedFormatTypesResponse.soap_put(soap, "ns6:GetSupportedFormatTypesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__GetSupportedFormatTypesResponse.soap_put(soap, "ns6:GetSupportedFormatTypesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__GetCredentialInfo(CredentialBindingService *soap)
{	struct __ns6__GetCredentialInfo soap_tmp___ns6__GetCredentialInfo;
	_ns6__GetCredentialInfoResponse ns6__GetCredentialInfoResponse;
	ns6__GetCredentialInfoResponse.soap_default(soap);
	soap_default___ns6__GetCredentialInfo(soap, &soap_tmp___ns6__GetCredentialInfo);
	if (!soap_get___ns6__GetCredentialInfo(soap, &soap_tmp___ns6__GetCredentialInfo, "-ns6:GetCredentialInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCredentialInfo(soap_tmp___ns6__GetCredentialInfo.ns6__GetCredentialInfo, ns6__GetCredentialInfoResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__GetCredentialInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__GetCredentialInfoResponse.soap_put(soap, "ns6:GetCredentialInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__GetCredentialInfoResponse.soap_put(soap, "ns6:GetCredentialInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__GetCredentialInfoList(CredentialBindingService *soap)
{	struct __ns6__GetCredentialInfoList soap_tmp___ns6__GetCredentialInfoList;
	_ns6__GetCredentialInfoListResponse ns6__GetCredentialInfoListResponse;
	ns6__GetCredentialInfoListResponse.soap_default(soap);
	soap_default___ns6__GetCredentialInfoList(soap, &soap_tmp___ns6__GetCredentialInfoList);
	if (!soap_get___ns6__GetCredentialInfoList(soap, &soap_tmp___ns6__GetCredentialInfoList, "-ns6:GetCredentialInfoList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCredentialInfoList(soap_tmp___ns6__GetCredentialInfoList.ns6__GetCredentialInfoList, ns6__GetCredentialInfoListResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__GetCredentialInfoListResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__GetCredentialInfoListResponse.soap_put(soap, "ns6:GetCredentialInfoListResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__GetCredentialInfoListResponse.soap_put(soap, "ns6:GetCredentialInfoListResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__GetCredentials(CredentialBindingService *soap)
{	struct __ns6__GetCredentials soap_tmp___ns6__GetCredentials;
	_ns6__GetCredentialsResponse ns6__GetCredentialsResponse;
	ns6__GetCredentialsResponse.soap_default(soap);
	soap_default___ns6__GetCredentials(soap, &soap_tmp___ns6__GetCredentials);
	if (!soap_get___ns6__GetCredentials(soap, &soap_tmp___ns6__GetCredentials, "-ns6:GetCredentials", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCredentials(soap_tmp___ns6__GetCredentials.ns6__GetCredentials, ns6__GetCredentialsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__GetCredentialsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__GetCredentialsResponse.soap_put(soap, "ns6:GetCredentialsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__GetCredentialsResponse.soap_put(soap, "ns6:GetCredentialsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__GetCredentialList(CredentialBindingService *soap)
{	struct __ns6__GetCredentialList soap_tmp___ns6__GetCredentialList;
	_ns6__GetCredentialListResponse ns6__GetCredentialListResponse;
	ns6__GetCredentialListResponse.soap_default(soap);
	soap_default___ns6__GetCredentialList(soap, &soap_tmp___ns6__GetCredentialList);
	if (!soap_get___ns6__GetCredentialList(soap, &soap_tmp___ns6__GetCredentialList, "-ns6:GetCredentialList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCredentialList(soap_tmp___ns6__GetCredentialList.ns6__GetCredentialList, ns6__GetCredentialListResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__GetCredentialListResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__GetCredentialListResponse.soap_put(soap, "ns6:GetCredentialListResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__GetCredentialListResponse.soap_put(soap, "ns6:GetCredentialListResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__CreateCredential(CredentialBindingService *soap)
{	struct __ns6__CreateCredential soap_tmp___ns6__CreateCredential;
	_ns6__CreateCredentialResponse ns6__CreateCredentialResponse;
	ns6__CreateCredentialResponse.soap_default(soap);
	soap_default___ns6__CreateCredential(soap, &soap_tmp___ns6__CreateCredential);
	if (!soap_get___ns6__CreateCredential(soap, &soap_tmp___ns6__CreateCredential, "-ns6:CreateCredential", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateCredential(soap_tmp___ns6__CreateCredential.ns6__CreateCredential, ns6__CreateCredentialResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__CreateCredentialResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__CreateCredentialResponse.soap_put(soap, "ns6:CreateCredentialResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__CreateCredentialResponse.soap_put(soap, "ns6:CreateCredentialResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__ModifyCredential(CredentialBindingService *soap)
{	struct __ns6__ModifyCredential soap_tmp___ns6__ModifyCredential;
	_ns6__ModifyCredentialResponse ns6__ModifyCredentialResponse;
	ns6__ModifyCredentialResponse.soap_default(soap);
	soap_default___ns6__ModifyCredential(soap, &soap_tmp___ns6__ModifyCredential);
	if (!soap_get___ns6__ModifyCredential(soap, &soap_tmp___ns6__ModifyCredential, "-ns6:ModifyCredential", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyCredential(soap_tmp___ns6__ModifyCredential.ns6__ModifyCredential, ns6__ModifyCredentialResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__ModifyCredentialResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__ModifyCredentialResponse.soap_put(soap, "ns6:ModifyCredentialResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__ModifyCredentialResponse.soap_put(soap, "ns6:ModifyCredentialResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__DeleteCredential(CredentialBindingService *soap)
{	struct __ns6__DeleteCredential soap_tmp___ns6__DeleteCredential;
	_ns6__DeleteCredentialResponse ns6__DeleteCredentialResponse;
	ns6__DeleteCredentialResponse.soap_default(soap);
	soap_default___ns6__DeleteCredential(soap, &soap_tmp___ns6__DeleteCredential);
	if (!soap_get___ns6__DeleteCredential(soap, &soap_tmp___ns6__DeleteCredential, "-ns6:DeleteCredential", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteCredential(soap_tmp___ns6__DeleteCredential.ns6__DeleteCredential, ns6__DeleteCredentialResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__DeleteCredentialResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__DeleteCredentialResponse.soap_put(soap, "ns6:DeleteCredentialResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__DeleteCredentialResponse.soap_put(soap, "ns6:DeleteCredentialResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__GetCredentialState(CredentialBindingService *soap)
{	struct __ns6__GetCredentialState soap_tmp___ns6__GetCredentialState;
	_ns6__GetCredentialStateResponse ns6__GetCredentialStateResponse;
	ns6__GetCredentialStateResponse.soap_default(soap);
	soap_default___ns6__GetCredentialState(soap, &soap_tmp___ns6__GetCredentialState);
	if (!soap_get___ns6__GetCredentialState(soap, &soap_tmp___ns6__GetCredentialState, "-ns6:GetCredentialState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCredentialState(soap_tmp___ns6__GetCredentialState.ns6__GetCredentialState, ns6__GetCredentialStateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__GetCredentialStateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__GetCredentialStateResponse.soap_put(soap, "ns6:GetCredentialStateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__GetCredentialStateResponse.soap_put(soap, "ns6:GetCredentialStateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__EnableCredential(CredentialBindingService *soap)
{	struct __ns6__EnableCredential soap_tmp___ns6__EnableCredential;
	_ns6__EnableCredentialResponse ns6__EnableCredentialResponse;
	ns6__EnableCredentialResponse.soap_default(soap);
	soap_default___ns6__EnableCredential(soap, &soap_tmp___ns6__EnableCredential);
	if (!soap_get___ns6__EnableCredential(soap, &soap_tmp___ns6__EnableCredential, "-ns6:EnableCredential", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->EnableCredential(soap_tmp___ns6__EnableCredential.ns6__EnableCredential, ns6__EnableCredentialResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__EnableCredentialResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__EnableCredentialResponse.soap_put(soap, "ns6:EnableCredentialResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__EnableCredentialResponse.soap_put(soap, "ns6:EnableCredentialResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__DisableCredential(CredentialBindingService *soap)
{	struct __ns6__DisableCredential soap_tmp___ns6__DisableCredential;
	_ns6__DisableCredentialResponse ns6__DisableCredentialResponse;
	ns6__DisableCredentialResponse.soap_default(soap);
	soap_default___ns6__DisableCredential(soap, &soap_tmp___ns6__DisableCredential);
	if (!soap_get___ns6__DisableCredential(soap, &soap_tmp___ns6__DisableCredential, "-ns6:DisableCredential", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DisableCredential(soap_tmp___ns6__DisableCredential.ns6__DisableCredential, ns6__DisableCredentialResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__DisableCredentialResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__DisableCredentialResponse.soap_put(soap, "ns6:DisableCredentialResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__DisableCredentialResponse.soap_put(soap, "ns6:DisableCredentialResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__ResetAntipassbackViolation(CredentialBindingService *soap)
{	struct __ns6__ResetAntipassbackViolation soap_tmp___ns6__ResetAntipassbackViolation;
	_ns6__ResetAntipassbackViolationResponse ns6__ResetAntipassbackViolationResponse;
	ns6__ResetAntipassbackViolationResponse.soap_default(soap);
	soap_default___ns6__ResetAntipassbackViolation(soap, &soap_tmp___ns6__ResetAntipassbackViolation);
	if (!soap_get___ns6__ResetAntipassbackViolation(soap, &soap_tmp___ns6__ResetAntipassbackViolation, "-ns6:ResetAntipassbackViolation", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ResetAntipassbackViolation(soap_tmp___ns6__ResetAntipassbackViolation.ns6__ResetAntipassbackViolation, ns6__ResetAntipassbackViolationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__ResetAntipassbackViolationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__ResetAntipassbackViolationResponse.soap_put(soap, "ns6:ResetAntipassbackViolationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__ResetAntipassbackViolationResponse.soap_put(soap, "ns6:ResetAntipassbackViolationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__GetCredentialIdentifiers(CredentialBindingService *soap)
{	struct __ns6__GetCredentialIdentifiers soap_tmp___ns6__GetCredentialIdentifiers;
	_ns6__GetCredentialIdentifiersResponse ns6__GetCredentialIdentifiersResponse;
	ns6__GetCredentialIdentifiersResponse.soap_default(soap);
	soap_default___ns6__GetCredentialIdentifiers(soap, &soap_tmp___ns6__GetCredentialIdentifiers);
	if (!soap_get___ns6__GetCredentialIdentifiers(soap, &soap_tmp___ns6__GetCredentialIdentifiers, "-ns6:GetCredentialIdentifiers", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCredentialIdentifiers(soap_tmp___ns6__GetCredentialIdentifiers.ns6__GetCredentialIdentifiers, ns6__GetCredentialIdentifiersResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__GetCredentialIdentifiersResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__GetCredentialIdentifiersResponse.soap_put(soap, "ns6:GetCredentialIdentifiersResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__GetCredentialIdentifiersResponse.soap_put(soap, "ns6:GetCredentialIdentifiersResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__SetCredentialIdentifier(CredentialBindingService *soap)
{	struct __ns6__SetCredentialIdentifier soap_tmp___ns6__SetCredentialIdentifier;
	_ns6__SetCredentialIdentifierResponse ns6__SetCredentialIdentifierResponse;
	ns6__SetCredentialIdentifierResponse.soap_default(soap);
	soap_default___ns6__SetCredentialIdentifier(soap, &soap_tmp___ns6__SetCredentialIdentifier);
	if (!soap_get___ns6__SetCredentialIdentifier(soap, &soap_tmp___ns6__SetCredentialIdentifier, "-ns6:SetCredentialIdentifier", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetCredentialIdentifier(soap_tmp___ns6__SetCredentialIdentifier.ns6__SetCredentialIdentifier, ns6__SetCredentialIdentifierResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__SetCredentialIdentifierResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__SetCredentialIdentifierResponse.soap_put(soap, "ns6:SetCredentialIdentifierResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__SetCredentialIdentifierResponse.soap_put(soap, "ns6:SetCredentialIdentifierResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__DeleteCredentialIdentifier(CredentialBindingService *soap)
{	struct __ns6__DeleteCredentialIdentifier soap_tmp___ns6__DeleteCredentialIdentifier;
	_ns6__DeleteCredentialIdentifierResponse ns6__DeleteCredentialIdentifierResponse;
	ns6__DeleteCredentialIdentifierResponse.soap_default(soap);
	soap_default___ns6__DeleteCredentialIdentifier(soap, &soap_tmp___ns6__DeleteCredentialIdentifier);
	if (!soap_get___ns6__DeleteCredentialIdentifier(soap, &soap_tmp___ns6__DeleteCredentialIdentifier, "-ns6:DeleteCredentialIdentifier", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteCredentialIdentifier(soap_tmp___ns6__DeleteCredentialIdentifier.ns6__DeleteCredentialIdentifier, ns6__DeleteCredentialIdentifierResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__DeleteCredentialIdentifierResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__DeleteCredentialIdentifierResponse.soap_put(soap, "ns6:DeleteCredentialIdentifierResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__DeleteCredentialIdentifierResponse.soap_put(soap, "ns6:DeleteCredentialIdentifierResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__GetCredentialAccessProfiles(CredentialBindingService *soap)
{	struct __ns6__GetCredentialAccessProfiles soap_tmp___ns6__GetCredentialAccessProfiles;
	_ns6__GetCredentialAccessProfilesResponse ns6__GetCredentialAccessProfilesResponse;
	ns6__GetCredentialAccessProfilesResponse.soap_default(soap);
	soap_default___ns6__GetCredentialAccessProfiles(soap, &soap_tmp___ns6__GetCredentialAccessProfiles);
	if (!soap_get___ns6__GetCredentialAccessProfiles(soap, &soap_tmp___ns6__GetCredentialAccessProfiles, "-ns6:GetCredentialAccessProfiles", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCredentialAccessProfiles(soap_tmp___ns6__GetCredentialAccessProfiles.ns6__GetCredentialAccessProfiles, ns6__GetCredentialAccessProfilesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__GetCredentialAccessProfilesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__GetCredentialAccessProfilesResponse.soap_put(soap, "ns6:GetCredentialAccessProfilesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__GetCredentialAccessProfilesResponse.soap_put(soap, "ns6:GetCredentialAccessProfilesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__SetCredentialAccessProfiles(CredentialBindingService *soap)
{	struct __ns6__SetCredentialAccessProfiles soap_tmp___ns6__SetCredentialAccessProfiles;
	_ns6__SetCredentialAccessProfilesResponse ns6__SetCredentialAccessProfilesResponse;
	ns6__SetCredentialAccessProfilesResponse.soap_default(soap);
	soap_default___ns6__SetCredentialAccessProfiles(soap, &soap_tmp___ns6__SetCredentialAccessProfiles);
	if (!soap_get___ns6__SetCredentialAccessProfiles(soap, &soap_tmp___ns6__SetCredentialAccessProfiles, "-ns6:SetCredentialAccessProfiles", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetCredentialAccessProfiles(soap_tmp___ns6__SetCredentialAccessProfiles.ns6__SetCredentialAccessProfiles, ns6__SetCredentialAccessProfilesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__SetCredentialAccessProfilesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__SetCredentialAccessProfilesResponse.soap_put(soap, "ns6:SetCredentialAccessProfilesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__SetCredentialAccessProfilesResponse.soap_put(soap, "ns6:SetCredentialAccessProfilesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns6__DeleteCredentialAccessProfiles(CredentialBindingService *soap)
{	struct __ns6__DeleteCredentialAccessProfiles soap_tmp___ns6__DeleteCredentialAccessProfiles;
	_ns6__DeleteCredentialAccessProfilesResponse ns6__DeleteCredentialAccessProfilesResponse;
	ns6__DeleteCredentialAccessProfilesResponse.soap_default(soap);
	soap_default___ns6__DeleteCredentialAccessProfiles(soap, &soap_tmp___ns6__DeleteCredentialAccessProfiles);
	if (!soap_get___ns6__DeleteCredentialAccessProfiles(soap, &soap_tmp___ns6__DeleteCredentialAccessProfiles, "-ns6:DeleteCredentialAccessProfiles", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteCredentialAccessProfiles(soap_tmp___ns6__DeleteCredentialAccessProfiles.ns6__DeleteCredentialAccessProfiles, ns6__DeleteCredentialAccessProfilesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns6__DeleteCredentialAccessProfilesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns6__DeleteCredentialAccessProfilesResponse.soap_put(soap, "ns6:DeleteCredentialAccessProfilesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns6__DeleteCredentialAccessProfilesResponse.soap_put(soap, "ns6:DeleteCredentialAccessProfilesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
