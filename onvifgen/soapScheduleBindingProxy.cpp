/* soapScheduleBindingProxy.cpp
   Generated by gSOAP 2.8.66 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapScheduleBindingProxy.h"

ScheduleBindingProxy::ScheduleBindingProxy() : soap(SOAP_IO_DEFAULT)
{	ScheduleBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ScheduleBindingProxy::ScheduleBindingProxy(const ScheduleBindingProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
}

ScheduleBindingProxy::ScheduleBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

ScheduleBindingProxy::ScheduleBindingProxy(const char *endpoint) : soap(SOAP_IO_DEFAULT)
{	ScheduleBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

ScheduleBindingProxy::ScheduleBindingProxy(soap_mode iomode) : soap(iomode)
{	ScheduleBindingProxy_init(iomode, iomode);
}

ScheduleBindingProxy::ScheduleBindingProxy(const char *endpoint, soap_mode iomode) : soap(iomode)
{	ScheduleBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

ScheduleBindingProxy::ScheduleBindingProxy(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	ScheduleBindingProxy_init(imode, omode);
}

ScheduleBindingProxy::~ScheduleBindingProxy()
{
	this->destroy();
	}

void ScheduleBindingProxy::ScheduleBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver20/analytics", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver20/analytics/radiometry", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver10/network/wsdl/", NULL, NULL},
        {"ns13", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"ns14", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"ns6", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

ScheduleBindingProxy *ScheduleBindingProxy::copy()
{	ScheduleBindingProxy *dup = SOAP_NEW_UNMANAGED(ScheduleBindingProxy(*(struct soap*)this));
	return dup;
}

ScheduleBindingProxy& ScheduleBindingProxy::operator=(const ScheduleBindingProxy& rhs)
{	soap_done(this);
	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void ScheduleBindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void ScheduleBindingProxy::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	ScheduleBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void ScheduleBindingProxy::soap_noheader()
{	this->header = NULL;
}

void ScheduleBindingProxy::soap_header(struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence)
{	::soap_header(this);
	this->header->wsse__Security = wsse__Security;
	this->header->wsa5__MessageID = wsa5__MessageID;
	this->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->header->wsa5__From = wsa5__From;
	this->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->header->wsa5__FaultTo = wsa5__FaultTo;
	this->header->wsa5__To = wsa5__To;
	this->header->wsa5__Action = wsa5__Action;
	this->header->chan__ChannelInstance = chan__ChannelInstance;
	this->header->wsdd__AppSequence = wsdd__AppSequence;
}

::SOAP_ENV__Header *ScheduleBindingProxy::soap_header()
{	return this->header;
}

::SOAP_ENV__Fault *ScheduleBindingProxy::soap_fault()
{	return this->fault;
}

const char *ScheduleBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *ScheduleBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int ScheduleBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

int ScheduleBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void ScheduleBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ScheduleBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *ScheduleBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int ScheduleBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns13__GetServiceCapabilities *ns13__GetServiceCapabilities, _ns13__GetServiceCapabilitiesResponse &ns13__GetServiceCapabilitiesResponse)
{	struct soap *soap = this;
	struct __ns13__GetServiceCapabilities soap_tmp___ns13__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetServiceCapabilities";
	soap_tmp___ns13__GetServiceCapabilities.ns13__GetServiceCapabilities = ns13__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetServiceCapabilities(soap, &soap_tmp___ns13__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetServiceCapabilities(soap, &soap_tmp___ns13__GetServiceCapabilities, "-ns13:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetServiceCapabilities(soap, &soap_tmp___ns13__GetServiceCapabilities, "-ns13:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetServiceCapabilitiesResponse*>(&ns13__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetServiceCapabilitiesResponse.soap_get(soap, "ns13:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleState(const char *endpoint, const char *soap_action, _ns13__GetScheduleState *ns13__GetScheduleState, _ns13__GetScheduleStateResponse &ns13__GetScheduleStateResponse)
{	struct soap *soap = this;
	struct __ns13__GetScheduleState soap_tmp___ns13__GetScheduleState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleState";
	soap_tmp___ns13__GetScheduleState.ns13__GetScheduleState = ns13__GetScheduleState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetScheduleState(soap, &soap_tmp___ns13__GetScheduleState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetScheduleState(soap, &soap_tmp___ns13__GetScheduleState, "-ns13:GetScheduleState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetScheduleState(soap, &soap_tmp___ns13__GetScheduleState, "-ns13:GetScheduleState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetScheduleStateResponse*>(&ns13__GetScheduleStateResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetScheduleStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetScheduleStateResponse.soap_get(soap, "ns13:GetScheduleStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleInfo(const char *endpoint, const char *soap_action, _ns13__GetScheduleInfo *ns13__GetScheduleInfo, _ns13__GetScheduleInfoResponse &ns13__GetScheduleInfoResponse)
{	struct soap *soap = this;
	struct __ns13__GetScheduleInfo soap_tmp___ns13__GetScheduleInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfo";
	soap_tmp___ns13__GetScheduleInfo.ns13__GetScheduleInfo = ns13__GetScheduleInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetScheduleInfo(soap, &soap_tmp___ns13__GetScheduleInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetScheduleInfo(soap, &soap_tmp___ns13__GetScheduleInfo, "-ns13:GetScheduleInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetScheduleInfo(soap, &soap_tmp___ns13__GetScheduleInfo, "-ns13:GetScheduleInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetScheduleInfoResponse*>(&ns13__GetScheduleInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetScheduleInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetScheduleInfoResponse.soap_get(soap, "ns13:GetScheduleInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleInfoList(const char *endpoint, const char *soap_action, _ns13__GetScheduleInfoList *ns13__GetScheduleInfoList, _ns13__GetScheduleInfoListResponse &ns13__GetScheduleInfoListResponse)
{	struct soap *soap = this;
	struct __ns13__GetScheduleInfoList soap_tmp___ns13__GetScheduleInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfoList";
	soap_tmp___ns13__GetScheduleInfoList.ns13__GetScheduleInfoList = ns13__GetScheduleInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetScheduleInfoList(soap, &soap_tmp___ns13__GetScheduleInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetScheduleInfoList(soap, &soap_tmp___ns13__GetScheduleInfoList, "-ns13:GetScheduleInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetScheduleInfoList(soap, &soap_tmp___ns13__GetScheduleInfoList, "-ns13:GetScheduleInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetScheduleInfoListResponse*>(&ns13__GetScheduleInfoListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetScheduleInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetScheduleInfoListResponse.soap_get(soap, "ns13:GetScheduleInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSchedules(const char *endpoint, const char *soap_action, _ns13__GetSchedules *ns13__GetSchedules, _ns13__GetSchedulesResponse &ns13__GetSchedulesResponse)
{	struct soap *soap = this;
	struct __ns13__GetSchedules soap_tmp___ns13__GetSchedules;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSchedules";
	soap_tmp___ns13__GetSchedules.ns13__GetSchedules = ns13__GetSchedules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetSchedules(soap, &soap_tmp___ns13__GetSchedules);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetSchedules(soap, &soap_tmp___ns13__GetSchedules, "-ns13:GetSchedules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetSchedules(soap, &soap_tmp___ns13__GetSchedules, "-ns13:GetSchedules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetSchedulesResponse*>(&ns13__GetSchedulesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetSchedulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetSchedulesResponse.soap_get(soap, "ns13:GetSchedulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleList(const char *endpoint, const char *soap_action, _ns13__GetScheduleList *ns13__GetScheduleList, _ns13__GetScheduleListResponse &ns13__GetScheduleListResponse)
{	struct soap *soap = this;
	struct __ns13__GetScheduleList soap_tmp___ns13__GetScheduleList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleList";
	soap_tmp___ns13__GetScheduleList.ns13__GetScheduleList = ns13__GetScheduleList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetScheduleList(soap, &soap_tmp___ns13__GetScheduleList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetScheduleList(soap, &soap_tmp___ns13__GetScheduleList, "-ns13:GetScheduleList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetScheduleList(soap, &soap_tmp___ns13__GetScheduleList, "-ns13:GetScheduleList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetScheduleListResponse*>(&ns13__GetScheduleListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetScheduleListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetScheduleListResponse.soap_get(soap, "ns13:GetScheduleListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::CreateSchedule(const char *endpoint, const char *soap_action, _ns13__CreateSchedule *ns13__CreateSchedule, _ns13__CreateScheduleResponse &ns13__CreateScheduleResponse)
{	struct soap *soap = this;
	struct __ns13__CreateSchedule soap_tmp___ns13__CreateSchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/CreateSchedule";
	soap_tmp___ns13__CreateSchedule.ns13__CreateSchedule = ns13__CreateSchedule;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__CreateSchedule(soap, &soap_tmp___ns13__CreateSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__CreateSchedule(soap, &soap_tmp___ns13__CreateSchedule, "-ns13:CreateSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__CreateSchedule(soap, &soap_tmp___ns13__CreateSchedule, "-ns13:CreateSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__CreateScheduleResponse*>(&ns13__CreateScheduleResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__CreateScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__CreateScheduleResponse.soap_get(soap, "ns13:CreateScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::ModifySchedule(const char *endpoint, const char *soap_action, _ns13__ModifySchedule *ns13__ModifySchedule, _ns13__ModifyScheduleResponse &ns13__ModifyScheduleResponse)
{	struct soap *soap = this;
	struct __ns13__ModifySchedule soap_tmp___ns13__ModifySchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/ModifySchedule";
	soap_tmp___ns13__ModifySchedule.ns13__ModifySchedule = ns13__ModifySchedule;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__ModifySchedule(soap, &soap_tmp___ns13__ModifySchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__ModifySchedule(soap, &soap_tmp___ns13__ModifySchedule, "-ns13:ModifySchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__ModifySchedule(soap, &soap_tmp___ns13__ModifySchedule, "-ns13:ModifySchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__ModifyScheduleResponse*>(&ns13__ModifyScheduleResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__ModifyScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__ModifyScheduleResponse.soap_get(soap, "ns13:ModifyScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::DeleteSchedule(const char *endpoint, const char *soap_action, _ns13__DeleteSchedule *ns13__DeleteSchedule, _ns13__DeleteScheduleResponse &ns13__DeleteScheduleResponse)
{	struct soap *soap = this;
	struct __ns13__DeleteSchedule soap_tmp___ns13__DeleteSchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/DeleteSchedule";
	soap_tmp___ns13__DeleteSchedule.ns13__DeleteSchedule = ns13__DeleteSchedule;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__DeleteSchedule(soap, &soap_tmp___ns13__DeleteSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__DeleteSchedule(soap, &soap_tmp___ns13__DeleteSchedule, "-ns13:DeleteSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__DeleteSchedule(soap, &soap_tmp___ns13__DeleteSchedule, "-ns13:DeleteSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__DeleteScheduleResponse*>(&ns13__DeleteScheduleResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__DeleteScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__DeleteScheduleResponse.soap_get(soap, "ns13:DeleteScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroupInfo(const char *endpoint, const char *soap_action, _ns13__GetSpecialDayGroupInfo *ns13__GetSpecialDayGroupInfo, _ns13__GetSpecialDayGroupInfoResponse &ns13__GetSpecialDayGroupInfoResponse)
{	struct soap *soap = this;
	struct __ns13__GetSpecialDayGroupInfo soap_tmp___ns13__GetSpecialDayGroupInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfo";
	soap_tmp___ns13__GetSpecialDayGroupInfo.ns13__GetSpecialDayGroupInfo = ns13__GetSpecialDayGroupInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetSpecialDayGroupInfo(soap, &soap_tmp___ns13__GetSpecialDayGroupInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetSpecialDayGroupInfo(soap, &soap_tmp___ns13__GetSpecialDayGroupInfo, "-ns13:GetSpecialDayGroupInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetSpecialDayGroupInfo(soap, &soap_tmp___ns13__GetSpecialDayGroupInfo, "-ns13:GetSpecialDayGroupInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetSpecialDayGroupInfoResponse*>(&ns13__GetSpecialDayGroupInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetSpecialDayGroupInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetSpecialDayGroupInfoResponse.soap_get(soap, "ns13:GetSpecialDayGroupInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroupInfoList(const char *endpoint, const char *soap_action, _ns13__GetSpecialDayGroupInfoList *ns13__GetSpecialDayGroupInfoList, _ns13__GetSpecialDayGroupInfoListResponse &ns13__GetSpecialDayGroupInfoListResponse)
{	struct soap *soap = this;
	struct __ns13__GetSpecialDayGroupInfoList soap_tmp___ns13__GetSpecialDayGroupInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfoList";
	soap_tmp___ns13__GetSpecialDayGroupInfoList.ns13__GetSpecialDayGroupInfoList = ns13__GetSpecialDayGroupInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns13__GetSpecialDayGroupInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns13__GetSpecialDayGroupInfoList, "-ns13:GetSpecialDayGroupInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns13__GetSpecialDayGroupInfoList, "-ns13:GetSpecialDayGroupInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetSpecialDayGroupInfoListResponse*>(&ns13__GetSpecialDayGroupInfoListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetSpecialDayGroupInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetSpecialDayGroupInfoListResponse.soap_get(soap, "ns13:GetSpecialDayGroupInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroups(const char *endpoint, const char *soap_action, _ns13__GetSpecialDayGroups *ns13__GetSpecialDayGroups, _ns13__GetSpecialDayGroupsResponse &ns13__GetSpecialDayGroupsResponse)
{	struct soap *soap = this;
	struct __ns13__GetSpecialDayGroups soap_tmp___ns13__GetSpecialDayGroups;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroups";
	soap_tmp___ns13__GetSpecialDayGroups.ns13__GetSpecialDayGroups = ns13__GetSpecialDayGroups;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetSpecialDayGroups(soap, &soap_tmp___ns13__GetSpecialDayGroups);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetSpecialDayGroups(soap, &soap_tmp___ns13__GetSpecialDayGroups, "-ns13:GetSpecialDayGroups", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetSpecialDayGroups(soap, &soap_tmp___ns13__GetSpecialDayGroups, "-ns13:GetSpecialDayGroups", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetSpecialDayGroupsResponse*>(&ns13__GetSpecialDayGroupsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetSpecialDayGroupsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetSpecialDayGroupsResponse.soap_get(soap, "ns13:GetSpecialDayGroupsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroupList(const char *endpoint, const char *soap_action, _ns13__GetSpecialDayGroupList *ns13__GetSpecialDayGroupList, _ns13__GetSpecialDayGroupListResponse &ns13__GetSpecialDayGroupListResponse)
{	struct soap *soap = this;
	struct __ns13__GetSpecialDayGroupList soap_tmp___ns13__GetSpecialDayGroupList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupList";
	soap_tmp___ns13__GetSpecialDayGroupList.ns13__GetSpecialDayGroupList = ns13__GetSpecialDayGroupList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetSpecialDayGroupList(soap, &soap_tmp___ns13__GetSpecialDayGroupList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetSpecialDayGroupList(soap, &soap_tmp___ns13__GetSpecialDayGroupList, "-ns13:GetSpecialDayGroupList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetSpecialDayGroupList(soap, &soap_tmp___ns13__GetSpecialDayGroupList, "-ns13:GetSpecialDayGroupList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetSpecialDayGroupListResponse*>(&ns13__GetSpecialDayGroupListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetSpecialDayGroupListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetSpecialDayGroupListResponse.soap_get(soap, "ns13:GetSpecialDayGroupListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::CreateSpecialDayGroup(const char *endpoint, const char *soap_action, _ns13__CreateSpecialDayGroup *ns13__CreateSpecialDayGroup, _ns13__CreateSpecialDayGroupResponse &ns13__CreateSpecialDayGroupResponse)
{	struct soap *soap = this;
	struct __ns13__CreateSpecialDayGroup soap_tmp___ns13__CreateSpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/CreateSpecialDayGroup";
	soap_tmp___ns13__CreateSpecialDayGroup.ns13__CreateSpecialDayGroup = ns13__CreateSpecialDayGroup;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__CreateSpecialDayGroup(soap, &soap_tmp___ns13__CreateSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__CreateSpecialDayGroup(soap, &soap_tmp___ns13__CreateSpecialDayGroup, "-ns13:CreateSpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__CreateSpecialDayGroup(soap, &soap_tmp___ns13__CreateSpecialDayGroup, "-ns13:CreateSpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__CreateSpecialDayGroupResponse*>(&ns13__CreateSpecialDayGroupResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__CreateSpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__CreateSpecialDayGroupResponse.soap_get(soap, "ns13:CreateSpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::ModifySpecialDayGroup(const char *endpoint, const char *soap_action, _ns13__ModifySpecialDayGroup *ns13__ModifySpecialDayGroup, _ns13__ModifySpecialDayGroupResponse &ns13__ModifySpecialDayGroupResponse)
{	struct soap *soap = this;
	struct __ns13__ModifySpecialDayGroup soap_tmp___ns13__ModifySpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/ModifySpecialDayGroup";
	soap_tmp___ns13__ModifySpecialDayGroup.ns13__ModifySpecialDayGroup = ns13__ModifySpecialDayGroup;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__ModifySpecialDayGroup(soap, &soap_tmp___ns13__ModifySpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__ModifySpecialDayGroup(soap, &soap_tmp___ns13__ModifySpecialDayGroup, "-ns13:ModifySpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__ModifySpecialDayGroup(soap, &soap_tmp___ns13__ModifySpecialDayGroup, "-ns13:ModifySpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__ModifySpecialDayGroupResponse*>(&ns13__ModifySpecialDayGroupResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__ModifySpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__ModifySpecialDayGroupResponse.soap_get(soap, "ns13:ModifySpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::DeleteSpecialDayGroup(const char *endpoint, const char *soap_action, _ns13__DeleteSpecialDayGroup *ns13__DeleteSpecialDayGroup, _ns13__DeleteSpecialDayGroupResponse &ns13__DeleteSpecialDayGroupResponse)
{	struct soap *soap = this;
	struct __ns13__DeleteSpecialDayGroup soap_tmp___ns13__DeleteSpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/DeleteSpecialDayGroup";
	soap_tmp___ns13__DeleteSpecialDayGroup.ns13__DeleteSpecialDayGroup = ns13__DeleteSpecialDayGroup;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__DeleteSpecialDayGroup(soap, &soap_tmp___ns13__DeleteSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__DeleteSpecialDayGroup(soap, &soap_tmp___ns13__DeleteSpecialDayGroup, "-ns13:DeleteSpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__DeleteSpecialDayGroup(soap, &soap_tmp___ns13__DeleteSpecialDayGroup, "-ns13:DeleteSpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__DeleteSpecialDayGroupResponse*>(&ns13__DeleteSpecialDayGroupResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__DeleteSpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__DeleteSpecialDayGroupResponse.soap_get(soap, "ns13:DeleteSpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
