/* soapScheduleBindingService.cpp
   Generated by gSOAP 2.8.66 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapScheduleBindingService.h"

ScheduleBindingService::ScheduleBindingService() : soap(SOAP_IO_DEFAULT)
{	ScheduleBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ScheduleBindingService::ScheduleBindingService(const ScheduleBindingService& rhs)
{	soap_copy_context(this, &rhs);
}

ScheduleBindingService::ScheduleBindingService(const struct soap &_soap) : soap(_soap)
{ }

ScheduleBindingService::ScheduleBindingService(soap_mode iomode) : soap(iomode)
{	ScheduleBindingService_init(iomode, iomode);
}

ScheduleBindingService::ScheduleBindingService(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	ScheduleBindingService_init(imode, omode);
}

ScheduleBindingService::~ScheduleBindingService()
{
	this->destroy();
}

void ScheduleBindingService::ScheduleBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver20/analytics", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver20/analytics/radiometry", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver10/network/wsdl/", NULL, NULL},
        {"ns13", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"ns14", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"ns6", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

void ScheduleBindingService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void ScheduleBindingService::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	ScheduleBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
ScheduleBindingService *ScheduleBindingService::copy()
{	ScheduleBindingService *dup = SOAP_NEW_UNMANAGED(ScheduleBindingService(*(struct soap*)this));
	return dup;
}
#endif

ScheduleBindingService& ScheduleBindingService::operator=(const ScheduleBindingService& rhs)
{	soap_done(this);
	soap_copy_context(this, &rhs);
	return *this;
}

int ScheduleBindingService::soap_close_socket()
{	return soap_closesock(this);
}

int ScheduleBindingService::soap_force_close_socket()
{	return soap_force_closesock(this);
}

int ScheduleBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int ScheduleBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int ScheduleBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int ScheduleBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void ScheduleBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ScheduleBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *ScheduleBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void ScheduleBindingService::soap_noheader()
{	this->header = NULL;
}

void ScheduleBindingService::soap_header(struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence)
{	::soap_header(this);
	this->header->wsse__Security = wsse__Security;
	this->header->wsa5__MessageID = wsa5__MessageID;
	this->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->header->wsa5__From = wsa5__From;
	this->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->header->wsa5__FaultTo = wsa5__FaultTo;
	this->header->wsa5__To = wsa5__To;
	this->header->wsa5__Action = wsa5__Action;
	this->header->chan__ChannelInstance = chan__ChannelInstance;
	this->header->wsdd__AppSequence = wsdd__AppSequence;
}

::SOAP_ENV__Header *ScheduleBindingService::soap_header()
{	return this->header;
}

#ifndef WITH_NOIO
int ScheduleBindingService::run(int port)
{	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int ScheduleBindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->error;
}
#endif

SOAP_SOCKET ScheduleBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET ScheduleBindingService::accept()
{	return soap_accept(this);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int ScheduleBindingService::ssl_accept()
{	return soap_ssl_accept(this);
}
#endif
#endif

int ScheduleBindingService::serve()
{
#ifndef WITH_FASTCGI
	this->keep_alive = this->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->keep_alive > 0 && this->max_keep_alive > 0)
			this->keep_alive--;
#endif
		if (soap_begin_serve(this))
		{	if (this->error >= SOAP_STOP)
				continue;
			return this->error;
		}
		if ((dispatch() || (this->fserveloop && this->fserveloop(this))) && this->error && this->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___ns13__GetServiceCapabilities(ScheduleBindingService*);
static int serve___ns13__GetScheduleState(ScheduleBindingService*);
static int serve___ns13__GetScheduleInfo(ScheduleBindingService*);
static int serve___ns13__GetScheduleInfoList(ScheduleBindingService*);
static int serve___ns13__GetSchedules(ScheduleBindingService*);
static int serve___ns13__GetScheduleList(ScheduleBindingService*);
static int serve___ns13__CreateSchedule(ScheduleBindingService*);
static int serve___ns13__ModifySchedule(ScheduleBindingService*);
static int serve___ns13__DeleteSchedule(ScheduleBindingService*);
static int serve___ns13__GetSpecialDayGroupInfo(ScheduleBindingService*);
static int serve___ns13__GetSpecialDayGroupInfoList(ScheduleBindingService*);
static int serve___ns13__GetSpecialDayGroups(ScheduleBindingService*);
static int serve___ns13__GetSpecialDayGroupList(ScheduleBindingService*);
static int serve___ns13__CreateSpecialDayGroup(ScheduleBindingService*);
static int serve___ns13__ModifySpecialDayGroup(ScheduleBindingService*);
static int serve___ns13__DeleteSpecialDayGroup(ScheduleBindingService*);

int ScheduleBindingService::dispatch()
{
	soap_peek_element(this);
	if (!soap_match_tag(this, this->tag, "ns13:GetServiceCapabilities"))
		return serve___ns13__GetServiceCapabilities(this);
	if (!soap_match_tag(this, this->tag, "ns13:GetScheduleState"))
		return serve___ns13__GetScheduleState(this);
	if (!soap_match_tag(this, this->tag, "ns13:GetScheduleInfo"))
		return serve___ns13__GetScheduleInfo(this);
	if (!soap_match_tag(this, this->tag, "ns13:GetScheduleInfoList"))
		return serve___ns13__GetScheduleInfoList(this);
	if (!soap_match_tag(this, this->tag, "ns13:GetSchedules"))
		return serve___ns13__GetSchedules(this);
	if (!soap_match_tag(this, this->tag, "ns13:GetScheduleList"))
		return serve___ns13__GetScheduleList(this);
	if (!soap_match_tag(this, this->tag, "ns13:CreateSchedule"))
		return serve___ns13__CreateSchedule(this);
	if (!soap_match_tag(this, this->tag, "ns13:ModifySchedule"))
		return serve___ns13__ModifySchedule(this);
	if (!soap_match_tag(this, this->tag, "ns13:DeleteSchedule"))
		return serve___ns13__DeleteSchedule(this);
	if (!soap_match_tag(this, this->tag, "ns13:GetSpecialDayGroupInfo"))
		return serve___ns13__GetSpecialDayGroupInfo(this);
	if (!soap_match_tag(this, this->tag, "ns13:GetSpecialDayGroupInfoList"))
		return serve___ns13__GetSpecialDayGroupInfoList(this);
	if (!soap_match_tag(this, this->tag, "ns13:GetSpecialDayGroups"))
		return serve___ns13__GetSpecialDayGroups(this);
	if (!soap_match_tag(this, this->tag, "ns13:GetSpecialDayGroupList"))
		return serve___ns13__GetSpecialDayGroupList(this);
	if (!soap_match_tag(this, this->tag, "ns13:CreateSpecialDayGroup"))
		return serve___ns13__CreateSpecialDayGroup(this);
	if (!soap_match_tag(this, this->tag, "ns13:ModifySpecialDayGroup"))
		return serve___ns13__ModifySpecialDayGroup(this);
	if (!soap_match_tag(this, this->tag, "ns13:DeleteSpecialDayGroup"))
		return serve___ns13__DeleteSpecialDayGroup(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve___ns13__GetServiceCapabilities(ScheduleBindingService *soap)
{	struct __ns13__GetServiceCapabilities soap_tmp___ns13__GetServiceCapabilities;
	_ns13__GetServiceCapabilitiesResponse ns13__GetServiceCapabilitiesResponse;
	ns13__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___ns13__GetServiceCapabilities(soap, &soap_tmp___ns13__GetServiceCapabilities);
	if (!soap_get___ns13__GetServiceCapabilities(soap, &soap_tmp___ns13__GetServiceCapabilities, "-ns13:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetServiceCapabilities(soap_tmp___ns13__GetServiceCapabilities.ns13__GetServiceCapabilities, ns13__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__GetServiceCapabilitiesResponse.soap_put(soap, "ns13:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__GetServiceCapabilitiesResponse.soap_put(soap, "ns13:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__GetScheduleState(ScheduleBindingService *soap)
{	struct __ns13__GetScheduleState soap_tmp___ns13__GetScheduleState;
	_ns13__GetScheduleStateResponse ns13__GetScheduleStateResponse;
	ns13__GetScheduleStateResponse.soap_default(soap);
	soap_default___ns13__GetScheduleState(soap, &soap_tmp___ns13__GetScheduleState);
	if (!soap_get___ns13__GetScheduleState(soap, &soap_tmp___ns13__GetScheduleState, "-ns13:GetScheduleState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetScheduleState(soap_tmp___ns13__GetScheduleState.ns13__GetScheduleState, ns13__GetScheduleStateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__GetScheduleStateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__GetScheduleStateResponse.soap_put(soap, "ns13:GetScheduleStateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__GetScheduleStateResponse.soap_put(soap, "ns13:GetScheduleStateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__GetScheduleInfo(ScheduleBindingService *soap)
{	struct __ns13__GetScheduleInfo soap_tmp___ns13__GetScheduleInfo;
	_ns13__GetScheduleInfoResponse ns13__GetScheduleInfoResponse;
	ns13__GetScheduleInfoResponse.soap_default(soap);
	soap_default___ns13__GetScheduleInfo(soap, &soap_tmp___ns13__GetScheduleInfo);
	if (!soap_get___ns13__GetScheduleInfo(soap, &soap_tmp___ns13__GetScheduleInfo, "-ns13:GetScheduleInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetScheduleInfo(soap_tmp___ns13__GetScheduleInfo.ns13__GetScheduleInfo, ns13__GetScheduleInfoResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__GetScheduleInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__GetScheduleInfoResponse.soap_put(soap, "ns13:GetScheduleInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__GetScheduleInfoResponse.soap_put(soap, "ns13:GetScheduleInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__GetScheduleInfoList(ScheduleBindingService *soap)
{	struct __ns13__GetScheduleInfoList soap_tmp___ns13__GetScheduleInfoList;
	_ns13__GetScheduleInfoListResponse ns13__GetScheduleInfoListResponse;
	ns13__GetScheduleInfoListResponse.soap_default(soap);
	soap_default___ns13__GetScheduleInfoList(soap, &soap_tmp___ns13__GetScheduleInfoList);
	if (!soap_get___ns13__GetScheduleInfoList(soap, &soap_tmp___ns13__GetScheduleInfoList, "-ns13:GetScheduleInfoList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetScheduleInfoList(soap_tmp___ns13__GetScheduleInfoList.ns13__GetScheduleInfoList, ns13__GetScheduleInfoListResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__GetScheduleInfoListResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__GetScheduleInfoListResponse.soap_put(soap, "ns13:GetScheduleInfoListResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__GetScheduleInfoListResponse.soap_put(soap, "ns13:GetScheduleInfoListResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__GetSchedules(ScheduleBindingService *soap)
{	struct __ns13__GetSchedules soap_tmp___ns13__GetSchedules;
	_ns13__GetSchedulesResponse ns13__GetSchedulesResponse;
	ns13__GetSchedulesResponse.soap_default(soap);
	soap_default___ns13__GetSchedules(soap, &soap_tmp___ns13__GetSchedules);
	if (!soap_get___ns13__GetSchedules(soap, &soap_tmp___ns13__GetSchedules, "-ns13:GetSchedules", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSchedules(soap_tmp___ns13__GetSchedules.ns13__GetSchedules, ns13__GetSchedulesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__GetSchedulesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__GetSchedulesResponse.soap_put(soap, "ns13:GetSchedulesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__GetSchedulesResponse.soap_put(soap, "ns13:GetSchedulesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__GetScheduleList(ScheduleBindingService *soap)
{	struct __ns13__GetScheduleList soap_tmp___ns13__GetScheduleList;
	_ns13__GetScheduleListResponse ns13__GetScheduleListResponse;
	ns13__GetScheduleListResponse.soap_default(soap);
	soap_default___ns13__GetScheduleList(soap, &soap_tmp___ns13__GetScheduleList);
	if (!soap_get___ns13__GetScheduleList(soap, &soap_tmp___ns13__GetScheduleList, "-ns13:GetScheduleList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetScheduleList(soap_tmp___ns13__GetScheduleList.ns13__GetScheduleList, ns13__GetScheduleListResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__GetScheduleListResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__GetScheduleListResponse.soap_put(soap, "ns13:GetScheduleListResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__GetScheduleListResponse.soap_put(soap, "ns13:GetScheduleListResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__CreateSchedule(ScheduleBindingService *soap)
{	struct __ns13__CreateSchedule soap_tmp___ns13__CreateSchedule;
	_ns13__CreateScheduleResponse ns13__CreateScheduleResponse;
	ns13__CreateScheduleResponse.soap_default(soap);
	soap_default___ns13__CreateSchedule(soap, &soap_tmp___ns13__CreateSchedule);
	if (!soap_get___ns13__CreateSchedule(soap, &soap_tmp___ns13__CreateSchedule, "-ns13:CreateSchedule", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateSchedule(soap_tmp___ns13__CreateSchedule.ns13__CreateSchedule, ns13__CreateScheduleResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__CreateScheduleResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__CreateScheduleResponse.soap_put(soap, "ns13:CreateScheduleResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__CreateScheduleResponse.soap_put(soap, "ns13:CreateScheduleResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__ModifySchedule(ScheduleBindingService *soap)
{	struct __ns13__ModifySchedule soap_tmp___ns13__ModifySchedule;
	_ns13__ModifyScheduleResponse ns13__ModifyScheduleResponse;
	ns13__ModifyScheduleResponse.soap_default(soap);
	soap_default___ns13__ModifySchedule(soap, &soap_tmp___ns13__ModifySchedule);
	if (!soap_get___ns13__ModifySchedule(soap, &soap_tmp___ns13__ModifySchedule, "-ns13:ModifySchedule", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifySchedule(soap_tmp___ns13__ModifySchedule.ns13__ModifySchedule, ns13__ModifyScheduleResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__ModifyScheduleResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__ModifyScheduleResponse.soap_put(soap, "ns13:ModifyScheduleResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__ModifyScheduleResponse.soap_put(soap, "ns13:ModifyScheduleResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__DeleteSchedule(ScheduleBindingService *soap)
{	struct __ns13__DeleteSchedule soap_tmp___ns13__DeleteSchedule;
	_ns13__DeleteScheduleResponse ns13__DeleteScheduleResponse;
	ns13__DeleteScheduleResponse.soap_default(soap);
	soap_default___ns13__DeleteSchedule(soap, &soap_tmp___ns13__DeleteSchedule);
	if (!soap_get___ns13__DeleteSchedule(soap, &soap_tmp___ns13__DeleteSchedule, "-ns13:DeleteSchedule", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteSchedule(soap_tmp___ns13__DeleteSchedule.ns13__DeleteSchedule, ns13__DeleteScheduleResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__DeleteScheduleResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__DeleteScheduleResponse.soap_put(soap, "ns13:DeleteScheduleResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__DeleteScheduleResponse.soap_put(soap, "ns13:DeleteScheduleResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__GetSpecialDayGroupInfo(ScheduleBindingService *soap)
{	struct __ns13__GetSpecialDayGroupInfo soap_tmp___ns13__GetSpecialDayGroupInfo;
	_ns13__GetSpecialDayGroupInfoResponse ns13__GetSpecialDayGroupInfoResponse;
	ns13__GetSpecialDayGroupInfoResponse.soap_default(soap);
	soap_default___ns13__GetSpecialDayGroupInfo(soap, &soap_tmp___ns13__GetSpecialDayGroupInfo);
	if (!soap_get___ns13__GetSpecialDayGroupInfo(soap, &soap_tmp___ns13__GetSpecialDayGroupInfo, "-ns13:GetSpecialDayGroupInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSpecialDayGroupInfo(soap_tmp___ns13__GetSpecialDayGroupInfo.ns13__GetSpecialDayGroupInfo, ns13__GetSpecialDayGroupInfoResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__GetSpecialDayGroupInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__GetSpecialDayGroupInfoResponse.soap_put(soap, "ns13:GetSpecialDayGroupInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__GetSpecialDayGroupInfoResponse.soap_put(soap, "ns13:GetSpecialDayGroupInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__GetSpecialDayGroupInfoList(ScheduleBindingService *soap)
{	struct __ns13__GetSpecialDayGroupInfoList soap_tmp___ns13__GetSpecialDayGroupInfoList;
	_ns13__GetSpecialDayGroupInfoListResponse ns13__GetSpecialDayGroupInfoListResponse;
	ns13__GetSpecialDayGroupInfoListResponse.soap_default(soap);
	soap_default___ns13__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns13__GetSpecialDayGroupInfoList);
	if (!soap_get___ns13__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns13__GetSpecialDayGroupInfoList, "-ns13:GetSpecialDayGroupInfoList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSpecialDayGroupInfoList(soap_tmp___ns13__GetSpecialDayGroupInfoList.ns13__GetSpecialDayGroupInfoList, ns13__GetSpecialDayGroupInfoListResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__GetSpecialDayGroupInfoListResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__GetSpecialDayGroupInfoListResponse.soap_put(soap, "ns13:GetSpecialDayGroupInfoListResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__GetSpecialDayGroupInfoListResponse.soap_put(soap, "ns13:GetSpecialDayGroupInfoListResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__GetSpecialDayGroups(ScheduleBindingService *soap)
{	struct __ns13__GetSpecialDayGroups soap_tmp___ns13__GetSpecialDayGroups;
	_ns13__GetSpecialDayGroupsResponse ns13__GetSpecialDayGroupsResponse;
	ns13__GetSpecialDayGroupsResponse.soap_default(soap);
	soap_default___ns13__GetSpecialDayGroups(soap, &soap_tmp___ns13__GetSpecialDayGroups);
	if (!soap_get___ns13__GetSpecialDayGroups(soap, &soap_tmp___ns13__GetSpecialDayGroups, "-ns13:GetSpecialDayGroups", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSpecialDayGroups(soap_tmp___ns13__GetSpecialDayGroups.ns13__GetSpecialDayGroups, ns13__GetSpecialDayGroupsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__GetSpecialDayGroupsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__GetSpecialDayGroupsResponse.soap_put(soap, "ns13:GetSpecialDayGroupsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__GetSpecialDayGroupsResponse.soap_put(soap, "ns13:GetSpecialDayGroupsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__GetSpecialDayGroupList(ScheduleBindingService *soap)
{	struct __ns13__GetSpecialDayGroupList soap_tmp___ns13__GetSpecialDayGroupList;
	_ns13__GetSpecialDayGroupListResponse ns13__GetSpecialDayGroupListResponse;
	ns13__GetSpecialDayGroupListResponse.soap_default(soap);
	soap_default___ns13__GetSpecialDayGroupList(soap, &soap_tmp___ns13__GetSpecialDayGroupList);
	if (!soap_get___ns13__GetSpecialDayGroupList(soap, &soap_tmp___ns13__GetSpecialDayGroupList, "-ns13:GetSpecialDayGroupList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSpecialDayGroupList(soap_tmp___ns13__GetSpecialDayGroupList.ns13__GetSpecialDayGroupList, ns13__GetSpecialDayGroupListResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__GetSpecialDayGroupListResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__GetSpecialDayGroupListResponse.soap_put(soap, "ns13:GetSpecialDayGroupListResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__GetSpecialDayGroupListResponse.soap_put(soap, "ns13:GetSpecialDayGroupListResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__CreateSpecialDayGroup(ScheduleBindingService *soap)
{	struct __ns13__CreateSpecialDayGroup soap_tmp___ns13__CreateSpecialDayGroup;
	_ns13__CreateSpecialDayGroupResponse ns13__CreateSpecialDayGroupResponse;
	ns13__CreateSpecialDayGroupResponse.soap_default(soap);
	soap_default___ns13__CreateSpecialDayGroup(soap, &soap_tmp___ns13__CreateSpecialDayGroup);
	if (!soap_get___ns13__CreateSpecialDayGroup(soap, &soap_tmp___ns13__CreateSpecialDayGroup, "-ns13:CreateSpecialDayGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateSpecialDayGroup(soap_tmp___ns13__CreateSpecialDayGroup.ns13__CreateSpecialDayGroup, ns13__CreateSpecialDayGroupResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__CreateSpecialDayGroupResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__CreateSpecialDayGroupResponse.soap_put(soap, "ns13:CreateSpecialDayGroupResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__CreateSpecialDayGroupResponse.soap_put(soap, "ns13:CreateSpecialDayGroupResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__ModifySpecialDayGroup(ScheduleBindingService *soap)
{	struct __ns13__ModifySpecialDayGroup soap_tmp___ns13__ModifySpecialDayGroup;
	_ns13__ModifySpecialDayGroupResponse ns13__ModifySpecialDayGroupResponse;
	ns13__ModifySpecialDayGroupResponse.soap_default(soap);
	soap_default___ns13__ModifySpecialDayGroup(soap, &soap_tmp___ns13__ModifySpecialDayGroup);
	if (!soap_get___ns13__ModifySpecialDayGroup(soap, &soap_tmp___ns13__ModifySpecialDayGroup, "-ns13:ModifySpecialDayGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifySpecialDayGroup(soap_tmp___ns13__ModifySpecialDayGroup.ns13__ModifySpecialDayGroup, ns13__ModifySpecialDayGroupResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__ModifySpecialDayGroupResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__ModifySpecialDayGroupResponse.soap_put(soap, "ns13:ModifySpecialDayGroupResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__ModifySpecialDayGroupResponse.soap_put(soap, "ns13:ModifySpecialDayGroupResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns13__DeleteSpecialDayGroup(ScheduleBindingService *soap)
{	struct __ns13__DeleteSpecialDayGroup soap_tmp___ns13__DeleteSpecialDayGroup;
	_ns13__DeleteSpecialDayGroupResponse ns13__DeleteSpecialDayGroupResponse;
	ns13__DeleteSpecialDayGroupResponse.soap_default(soap);
	soap_default___ns13__DeleteSpecialDayGroup(soap, &soap_tmp___ns13__DeleteSpecialDayGroup);
	if (!soap_get___ns13__DeleteSpecialDayGroup(soap, &soap_tmp___ns13__DeleteSpecialDayGroup, "-ns13:DeleteSpecialDayGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteSpecialDayGroup(soap_tmp___ns13__DeleteSpecialDayGroup.ns13__DeleteSpecialDayGroup, ns13__DeleteSpecialDayGroupResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns13__DeleteSpecialDayGroupResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns13__DeleteSpecialDayGroupResponse.soap_put(soap, "ns13:DeleteSpecialDayGroupResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns13__DeleteSpecialDayGroupResponse.soap_put(soap, "ns13:DeleteSpecialDayGroupResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
