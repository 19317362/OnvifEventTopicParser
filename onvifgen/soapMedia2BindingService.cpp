/* soapMedia2BindingService.cpp
   Generated by gSOAP 2.8.66 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapMedia2BindingService.h"

Media2BindingService::Media2BindingService() : soap(SOAP_IO_DEFAULT)
{	Media2BindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

Media2BindingService::Media2BindingService(const Media2BindingService& rhs)
{	soap_copy_context(this, &rhs);
}

Media2BindingService::Media2BindingService(const struct soap &_soap) : soap(_soap)
{ }

Media2BindingService::Media2BindingService(soap_mode iomode) : soap(iomode)
{	Media2BindingService_init(iomode, iomode);
}

Media2BindingService::Media2BindingService(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	Media2BindingService_init(imode, omode);
}

Media2BindingService::~Media2BindingService()
{
	this->destroy();
}

void Media2BindingService::Media2BindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver20/analytics", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver20/analytics/radiometry", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver10/network/wsdl/", NULL, NULL},
        {"ns13", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"ns14", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"ns6", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

void Media2BindingService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void Media2BindingService::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	Media2BindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
Media2BindingService *Media2BindingService::copy()
{	Media2BindingService *dup = SOAP_NEW_UNMANAGED(Media2BindingService(*(struct soap*)this));
	return dup;
}
#endif

Media2BindingService& Media2BindingService::operator=(const Media2BindingService& rhs)
{	soap_done(this);
	soap_copy_context(this, &rhs);
	return *this;
}

int Media2BindingService::soap_close_socket()
{	return soap_closesock(this);
}

int Media2BindingService::soap_force_close_socket()
{	return soap_force_closesock(this);
}

int Media2BindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int Media2BindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int Media2BindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int Media2BindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void Media2BindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void Media2BindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *Media2BindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void Media2BindingService::soap_noheader()
{	this->header = NULL;
}

void Media2BindingService::soap_header(struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence)
{	::soap_header(this);
	this->header->wsse__Security = wsse__Security;
	this->header->wsa5__MessageID = wsa5__MessageID;
	this->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->header->wsa5__From = wsa5__From;
	this->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->header->wsa5__FaultTo = wsa5__FaultTo;
	this->header->wsa5__To = wsa5__To;
	this->header->wsa5__Action = wsa5__Action;
	this->header->chan__ChannelInstance = chan__ChannelInstance;
	this->header->wsdd__AppSequence = wsdd__AppSequence;
}

::SOAP_ENV__Header *Media2BindingService::soap_header()
{	return this->header;
}

#ifndef WITH_NOIO
int Media2BindingService::run(int port)
{	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int Media2BindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->error;
}
#endif

SOAP_SOCKET Media2BindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET Media2BindingService::accept()
{	return soap_accept(this);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int Media2BindingService::ssl_accept()
{	return soap_ssl_accept(this);
}
#endif
#endif

int Media2BindingService::serve()
{
#ifndef WITH_FASTCGI
	this->keep_alive = this->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->keep_alive > 0 && this->max_keep_alive > 0)
			this->keep_alive--;
#endif
		if (soap_begin_serve(this))
		{	if (this->error >= SOAP_STOP)
				continue;
			return this->error;
		}
		if ((dispatch() || (this->fserveloop && this->fserveloop(this))) && this->error && this->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___ns8__GetServiceCapabilities(Media2BindingService*);
static int serve___ns8__CreateProfile(Media2BindingService*);
static int serve___ns8__GetProfiles(Media2BindingService*);
static int serve___ns8__AddConfiguration(Media2BindingService*);
static int serve___ns8__RemoveConfiguration(Media2BindingService*);
static int serve___ns8__DeleteProfile(Media2BindingService*);
static int serve___ns8__GetVideoSourceConfigurations(Media2BindingService*);
static int serve___ns8__GetVideoEncoderConfigurations(Media2BindingService*);
static int serve___ns8__GetAudioSourceConfigurations(Media2BindingService*);
static int serve___ns8__GetAudioEncoderConfigurations(Media2BindingService*);
static int serve___ns8__GetAnalyticsConfigurations(Media2BindingService*);
static int serve___ns8__GetMetadataConfigurations(Media2BindingService*);
static int serve___ns8__GetAudioOutputConfigurations(Media2BindingService*);
static int serve___ns8__GetAudioDecoderConfigurations(Media2BindingService*);
static int serve___ns8__SetVideoSourceConfiguration(Media2BindingService*);
static int serve___ns8__SetVideoEncoderConfiguration(Media2BindingService*);
static int serve___ns8__SetAudioSourceConfiguration(Media2BindingService*);
static int serve___ns8__SetAudioEncoderConfiguration(Media2BindingService*);
static int serve___ns8__SetMetadataConfiguration(Media2BindingService*);
static int serve___ns8__SetAudioOutputConfiguration(Media2BindingService*);
static int serve___ns8__SetAudioDecoderConfiguration(Media2BindingService*);
static int serve___ns8__GetVideoSourceConfigurationOptions(Media2BindingService*);
static int serve___ns8__GetVideoEncoderConfigurationOptions(Media2BindingService*);
static int serve___ns8__GetAudioSourceConfigurationOptions(Media2BindingService*);
static int serve___ns8__GetAudioEncoderConfigurationOptions(Media2BindingService*);
static int serve___ns8__GetMetadataConfigurationOptions(Media2BindingService*);
static int serve___ns8__GetAudioOutputConfigurationOptions(Media2BindingService*);
static int serve___ns8__GetAudioDecoderConfigurationOptions(Media2BindingService*);
static int serve___ns8__GetVideoEncoderInstances(Media2BindingService*);
static int serve___ns8__GetStreamUri(Media2BindingService*);
static int serve___ns8__StartMulticastStreaming(Media2BindingService*);
static int serve___ns8__StopMulticastStreaming(Media2BindingService*);
static int serve___ns8__SetSynchronizationPoint(Media2BindingService*);
static int serve___ns8__GetSnapshotUri(Media2BindingService*);
static int serve___ns8__GetVideoSourceModes(Media2BindingService*);
static int serve___ns8__SetVideoSourceMode(Media2BindingService*);
static int serve___ns8__GetOSDs(Media2BindingService*);
static int serve___ns8__GetOSDOptions(Media2BindingService*);
static int serve___ns8__SetOSD(Media2BindingService*);
static int serve___ns8__CreateOSD(Media2BindingService*);
static int serve___ns8__DeleteOSD(Media2BindingService*);
static int serve___ns8__GetMasks(Media2BindingService*);
static int serve___ns8__GetMaskOptions(Media2BindingService*);
static int serve___ns8__SetMask(Media2BindingService*);
static int serve___ns8__CreateMask(Media2BindingService*);
static int serve___ns8__DeleteMask(Media2BindingService*);

int Media2BindingService::dispatch()
{
	soap_peek_element(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetServiceCapabilities"))
		return serve___ns8__GetServiceCapabilities(this);
	if (!soap_match_tag(this, this->tag, "ns8:CreateProfile"))
		return serve___ns8__CreateProfile(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetProfiles"))
		return serve___ns8__GetProfiles(this);
	if (!soap_match_tag(this, this->tag, "ns8:AddConfiguration"))
		return serve___ns8__AddConfiguration(this);
	if (!soap_match_tag(this, this->tag, "ns8:RemoveConfiguration"))
		return serve___ns8__RemoveConfiguration(this);
	if (!soap_match_tag(this, this->tag, "ns8:DeleteProfile"))
		return serve___ns8__DeleteProfile(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetVideoSourceConfigurations"))
		return serve___ns8__GetVideoSourceConfigurations(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetVideoEncoderConfigurations"))
		return serve___ns8__GetVideoEncoderConfigurations(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetAudioSourceConfigurations"))
		return serve___ns8__GetAudioSourceConfigurations(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetAudioEncoderConfigurations"))
		return serve___ns8__GetAudioEncoderConfigurations(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetAnalyticsConfigurations"))
		return serve___ns8__GetAnalyticsConfigurations(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetMetadataConfigurations"))
		return serve___ns8__GetMetadataConfigurations(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetAudioOutputConfigurations"))
		return serve___ns8__GetAudioOutputConfigurations(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetAudioDecoderConfigurations"))
		return serve___ns8__GetAudioDecoderConfigurations(this);
	if (!soap_match_tag(this, this->tag, "ns8:SetVideoSourceConfiguration"))
		return serve___ns8__SetVideoSourceConfiguration(this);
	if (!soap_match_tag(this, this->tag, "ns8:SetVideoEncoderConfiguration"))
		return serve___ns8__SetVideoEncoderConfiguration(this);
	if (!soap_match_tag(this, this->tag, "ns8:SetAudioSourceConfiguration"))
		return serve___ns8__SetAudioSourceConfiguration(this);
	if (!soap_match_tag(this, this->tag, "ns8:SetAudioEncoderConfiguration"))
		return serve___ns8__SetAudioEncoderConfiguration(this);
	if (!soap_match_tag(this, this->tag, "ns8:SetMetadataConfiguration"))
		return serve___ns8__SetMetadataConfiguration(this);
	if (!soap_match_tag(this, this->tag, "ns8:SetAudioOutputConfiguration"))
		return serve___ns8__SetAudioOutputConfiguration(this);
	if (!soap_match_tag(this, this->tag, "ns8:SetAudioDecoderConfiguration"))
		return serve___ns8__SetAudioDecoderConfiguration(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetVideoSourceConfigurationOptions"))
		return serve___ns8__GetVideoSourceConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetVideoEncoderConfigurationOptions"))
		return serve___ns8__GetVideoEncoderConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetAudioSourceConfigurationOptions"))
		return serve___ns8__GetAudioSourceConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetAudioEncoderConfigurationOptions"))
		return serve___ns8__GetAudioEncoderConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetMetadataConfigurationOptions"))
		return serve___ns8__GetMetadataConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetAudioOutputConfigurationOptions"))
		return serve___ns8__GetAudioOutputConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetAudioDecoderConfigurationOptions"))
		return serve___ns8__GetAudioDecoderConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetVideoEncoderInstances"))
		return serve___ns8__GetVideoEncoderInstances(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetStreamUri"))
		return serve___ns8__GetStreamUri(this);
	if (!soap_match_tag(this, this->tag, "ns8:StartMulticastStreaming"))
		return serve___ns8__StartMulticastStreaming(this);
	if (!soap_match_tag(this, this->tag, "ns8:StopMulticastStreaming"))
		return serve___ns8__StopMulticastStreaming(this);
	if (!soap_match_tag(this, this->tag, "ns8:SetSynchronizationPoint"))
		return serve___ns8__SetSynchronizationPoint(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetSnapshotUri"))
		return serve___ns8__GetSnapshotUri(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetVideoSourceModes"))
		return serve___ns8__GetVideoSourceModes(this);
	if (!soap_match_tag(this, this->tag, "ns8:SetVideoSourceMode"))
		return serve___ns8__SetVideoSourceMode(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetOSDs"))
		return serve___ns8__GetOSDs(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetOSDOptions"))
		return serve___ns8__GetOSDOptions(this);
	if (!soap_match_tag(this, this->tag, "ns8:SetOSD"))
		return serve___ns8__SetOSD(this);
	if (!soap_match_tag(this, this->tag, "ns8:CreateOSD"))
		return serve___ns8__CreateOSD(this);
	if (!soap_match_tag(this, this->tag, "ns8:DeleteOSD"))
		return serve___ns8__DeleteOSD(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetMasks"))
		return serve___ns8__GetMasks(this);
	if (!soap_match_tag(this, this->tag, "ns8:GetMaskOptions"))
		return serve___ns8__GetMaskOptions(this);
	if (!soap_match_tag(this, this->tag, "ns8:SetMask"))
		return serve___ns8__SetMask(this);
	if (!soap_match_tag(this, this->tag, "ns8:CreateMask"))
		return serve___ns8__CreateMask(this);
	if (!soap_match_tag(this, this->tag, "ns8:DeleteMask"))
		return serve___ns8__DeleteMask(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve___ns8__GetServiceCapabilities(Media2BindingService *soap)
{	struct __ns8__GetServiceCapabilities soap_tmp___ns8__GetServiceCapabilities;
	_ns8__GetServiceCapabilitiesResponse ns8__GetServiceCapabilitiesResponse;
	ns8__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities);
	if (!soap_get___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities, "-ns8:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetServiceCapabilities(soap_tmp___ns8__GetServiceCapabilities.ns8__GetServiceCapabilities, ns8__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetServiceCapabilitiesResponse.soap_put(soap, "ns8:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetServiceCapabilitiesResponse.soap_put(soap, "ns8:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__CreateProfile(Media2BindingService *soap)
{	struct __ns8__CreateProfile soap_tmp___ns8__CreateProfile;
	_ns8__CreateProfileResponse ns8__CreateProfileResponse;
	ns8__CreateProfileResponse.soap_default(soap);
	soap_default___ns8__CreateProfile(soap, &soap_tmp___ns8__CreateProfile);
	if (!soap_get___ns8__CreateProfile(soap, &soap_tmp___ns8__CreateProfile, "-ns8:CreateProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateProfile(soap_tmp___ns8__CreateProfile.ns8__CreateProfile, ns8__CreateProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__CreateProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__CreateProfileResponse.soap_put(soap, "ns8:CreateProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__CreateProfileResponse.soap_put(soap, "ns8:CreateProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetProfiles(Media2BindingService *soap)
{	struct __ns8__GetProfiles soap_tmp___ns8__GetProfiles;
	_ns8__GetProfilesResponse ns8__GetProfilesResponse;
	ns8__GetProfilesResponse.soap_default(soap);
	soap_default___ns8__GetProfiles(soap, &soap_tmp___ns8__GetProfiles);
	if (!soap_get___ns8__GetProfiles(soap, &soap_tmp___ns8__GetProfiles, "-ns8:GetProfiles", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetProfiles(soap_tmp___ns8__GetProfiles.ns8__GetProfiles, ns8__GetProfilesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetProfilesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetProfilesResponse.soap_put(soap, "ns8:GetProfilesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetProfilesResponse.soap_put(soap, "ns8:GetProfilesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__AddConfiguration(Media2BindingService *soap)
{	struct __ns8__AddConfiguration soap_tmp___ns8__AddConfiguration;
	_ns8__AddConfigurationResponse ns8__AddConfigurationResponse;
	ns8__AddConfigurationResponse.soap_default(soap);
	soap_default___ns8__AddConfiguration(soap, &soap_tmp___ns8__AddConfiguration);
	if (!soap_get___ns8__AddConfiguration(soap, &soap_tmp___ns8__AddConfiguration, "-ns8:AddConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->AddConfiguration(soap_tmp___ns8__AddConfiguration.ns8__AddConfiguration, ns8__AddConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__AddConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__AddConfigurationResponse.soap_put(soap, "ns8:AddConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__AddConfigurationResponse.soap_put(soap, "ns8:AddConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__RemoveConfiguration(Media2BindingService *soap)
{	struct __ns8__RemoveConfiguration soap_tmp___ns8__RemoveConfiguration;
	_ns8__RemoveConfigurationResponse ns8__RemoveConfigurationResponse;
	ns8__RemoveConfigurationResponse.soap_default(soap);
	soap_default___ns8__RemoveConfiguration(soap, &soap_tmp___ns8__RemoveConfiguration);
	if (!soap_get___ns8__RemoveConfiguration(soap, &soap_tmp___ns8__RemoveConfiguration, "-ns8:RemoveConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->RemoveConfiguration(soap_tmp___ns8__RemoveConfiguration.ns8__RemoveConfiguration, ns8__RemoveConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__RemoveConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__RemoveConfigurationResponse.soap_put(soap, "ns8:RemoveConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__RemoveConfigurationResponse.soap_put(soap, "ns8:RemoveConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__DeleteProfile(Media2BindingService *soap)
{	struct __ns8__DeleteProfile soap_tmp___ns8__DeleteProfile;
	_ns8__DeleteProfileResponse ns8__DeleteProfileResponse;
	ns8__DeleteProfileResponse.soap_default(soap);
	soap_default___ns8__DeleteProfile(soap, &soap_tmp___ns8__DeleteProfile);
	if (!soap_get___ns8__DeleteProfile(soap, &soap_tmp___ns8__DeleteProfile, "-ns8:DeleteProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteProfile(soap_tmp___ns8__DeleteProfile.ns8__DeleteProfile, ns8__DeleteProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__DeleteProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__DeleteProfileResponse.soap_put(soap, "ns8:DeleteProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__DeleteProfileResponse.soap_put(soap, "ns8:DeleteProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetVideoSourceConfigurations(Media2BindingService *soap)
{	struct __ns8__GetVideoSourceConfigurations soap_tmp___ns8__GetVideoSourceConfigurations;
	_ns8__GetVideoSourceConfigurationsResponse ns8__GetVideoSourceConfigurationsResponse;
	ns8__GetVideoSourceConfigurationsResponse.soap_default(soap);
	soap_default___ns8__GetVideoSourceConfigurations(soap, &soap_tmp___ns8__GetVideoSourceConfigurations);
	if (!soap_get___ns8__GetVideoSourceConfigurations(soap, &soap_tmp___ns8__GetVideoSourceConfigurations, "-ns8:GetVideoSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoSourceConfigurations(soap_tmp___ns8__GetVideoSourceConfigurations.ns8__GetVideoSourceConfigurations, ns8__GetVideoSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetVideoSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetVideoSourceConfigurationsResponse.soap_put(soap, "ns8:GetVideoSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetVideoSourceConfigurationsResponse.soap_put(soap, "ns8:GetVideoSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetVideoEncoderConfigurations(Media2BindingService *soap)
{	struct __ns8__GetVideoEncoderConfigurations soap_tmp___ns8__GetVideoEncoderConfigurations;
	_ns8__GetVideoEncoderConfigurationsResponse ns8__GetVideoEncoderConfigurationsResponse;
	ns8__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	soap_default___ns8__GetVideoEncoderConfigurations(soap, &soap_tmp___ns8__GetVideoEncoderConfigurations);
	if (!soap_get___ns8__GetVideoEncoderConfigurations(soap, &soap_tmp___ns8__GetVideoEncoderConfigurations, "-ns8:GetVideoEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoEncoderConfigurations(soap_tmp___ns8__GetVideoEncoderConfigurations.ns8__GetVideoEncoderConfigurations, ns8__GetVideoEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetVideoEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetVideoEncoderConfigurationsResponse.soap_put(soap, "ns8:GetVideoEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetVideoEncoderConfigurationsResponse.soap_put(soap, "ns8:GetVideoEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetAudioSourceConfigurations(Media2BindingService *soap)
{	struct __ns8__GetAudioSourceConfigurations soap_tmp___ns8__GetAudioSourceConfigurations;
	_ns8__GetAudioSourceConfigurationsResponse ns8__GetAudioSourceConfigurationsResponse;
	ns8__GetAudioSourceConfigurationsResponse.soap_default(soap);
	soap_default___ns8__GetAudioSourceConfigurations(soap, &soap_tmp___ns8__GetAudioSourceConfigurations);
	if (!soap_get___ns8__GetAudioSourceConfigurations(soap, &soap_tmp___ns8__GetAudioSourceConfigurations, "-ns8:GetAudioSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioSourceConfigurations(soap_tmp___ns8__GetAudioSourceConfigurations.ns8__GetAudioSourceConfigurations, ns8__GetAudioSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetAudioSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetAudioSourceConfigurationsResponse.soap_put(soap, "ns8:GetAudioSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetAudioSourceConfigurationsResponse.soap_put(soap, "ns8:GetAudioSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetAudioEncoderConfigurations(Media2BindingService *soap)
{	struct __ns8__GetAudioEncoderConfigurations soap_tmp___ns8__GetAudioEncoderConfigurations;
	_ns8__GetAudioEncoderConfigurationsResponse ns8__GetAudioEncoderConfigurationsResponse;
	ns8__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	soap_default___ns8__GetAudioEncoderConfigurations(soap, &soap_tmp___ns8__GetAudioEncoderConfigurations);
	if (!soap_get___ns8__GetAudioEncoderConfigurations(soap, &soap_tmp___ns8__GetAudioEncoderConfigurations, "-ns8:GetAudioEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioEncoderConfigurations(soap_tmp___ns8__GetAudioEncoderConfigurations.ns8__GetAudioEncoderConfigurations, ns8__GetAudioEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetAudioEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetAudioEncoderConfigurationsResponse.soap_put(soap, "ns8:GetAudioEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetAudioEncoderConfigurationsResponse.soap_put(soap, "ns8:GetAudioEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetAnalyticsConfigurations(Media2BindingService *soap)
{	struct __ns8__GetAnalyticsConfigurations soap_tmp___ns8__GetAnalyticsConfigurations;
	_ns8__GetAnalyticsConfigurationsResponse ns8__GetAnalyticsConfigurationsResponse;
	ns8__GetAnalyticsConfigurationsResponse.soap_default(soap);
	soap_default___ns8__GetAnalyticsConfigurations(soap, &soap_tmp___ns8__GetAnalyticsConfigurations);
	if (!soap_get___ns8__GetAnalyticsConfigurations(soap, &soap_tmp___ns8__GetAnalyticsConfigurations, "-ns8:GetAnalyticsConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAnalyticsConfigurations(soap_tmp___ns8__GetAnalyticsConfigurations.ns8__GetAnalyticsConfigurations, ns8__GetAnalyticsConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetAnalyticsConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetAnalyticsConfigurationsResponse.soap_put(soap, "ns8:GetAnalyticsConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetAnalyticsConfigurationsResponse.soap_put(soap, "ns8:GetAnalyticsConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetMetadataConfigurations(Media2BindingService *soap)
{	struct __ns8__GetMetadataConfigurations soap_tmp___ns8__GetMetadataConfigurations;
	_ns8__GetMetadataConfigurationsResponse ns8__GetMetadataConfigurationsResponse;
	ns8__GetMetadataConfigurationsResponse.soap_default(soap);
	soap_default___ns8__GetMetadataConfigurations(soap, &soap_tmp___ns8__GetMetadataConfigurations);
	if (!soap_get___ns8__GetMetadataConfigurations(soap, &soap_tmp___ns8__GetMetadataConfigurations, "-ns8:GetMetadataConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetMetadataConfigurations(soap_tmp___ns8__GetMetadataConfigurations.ns8__GetMetadataConfigurations, ns8__GetMetadataConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetMetadataConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetMetadataConfigurationsResponse.soap_put(soap, "ns8:GetMetadataConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetMetadataConfigurationsResponse.soap_put(soap, "ns8:GetMetadataConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetAudioOutputConfigurations(Media2BindingService *soap)
{	struct __ns8__GetAudioOutputConfigurations soap_tmp___ns8__GetAudioOutputConfigurations;
	_ns8__GetAudioOutputConfigurationsResponse ns8__GetAudioOutputConfigurationsResponse;
	ns8__GetAudioOutputConfigurationsResponse.soap_default(soap);
	soap_default___ns8__GetAudioOutputConfigurations(soap, &soap_tmp___ns8__GetAudioOutputConfigurations);
	if (!soap_get___ns8__GetAudioOutputConfigurations(soap, &soap_tmp___ns8__GetAudioOutputConfigurations, "-ns8:GetAudioOutputConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioOutputConfigurations(soap_tmp___ns8__GetAudioOutputConfigurations.ns8__GetAudioOutputConfigurations, ns8__GetAudioOutputConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetAudioOutputConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetAudioOutputConfigurationsResponse.soap_put(soap, "ns8:GetAudioOutputConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetAudioOutputConfigurationsResponse.soap_put(soap, "ns8:GetAudioOutputConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetAudioDecoderConfigurations(Media2BindingService *soap)
{	struct __ns8__GetAudioDecoderConfigurations soap_tmp___ns8__GetAudioDecoderConfigurations;
	_ns8__GetAudioDecoderConfigurationsResponse ns8__GetAudioDecoderConfigurationsResponse;
	ns8__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	soap_default___ns8__GetAudioDecoderConfigurations(soap, &soap_tmp___ns8__GetAudioDecoderConfigurations);
	if (!soap_get___ns8__GetAudioDecoderConfigurations(soap, &soap_tmp___ns8__GetAudioDecoderConfigurations, "-ns8:GetAudioDecoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioDecoderConfigurations(soap_tmp___ns8__GetAudioDecoderConfigurations.ns8__GetAudioDecoderConfigurations, ns8__GetAudioDecoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetAudioDecoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetAudioDecoderConfigurationsResponse.soap_put(soap, "ns8:GetAudioDecoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetAudioDecoderConfigurationsResponse.soap_put(soap, "ns8:GetAudioDecoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__SetVideoSourceConfiguration(Media2BindingService *soap)
{	struct __ns8__SetVideoSourceConfiguration soap_tmp___ns8__SetVideoSourceConfiguration;
	ns8__SetConfigurationResponse ns8__SetVideoSourceConfigurationResponse;
	ns8__SetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___ns8__SetVideoSourceConfiguration(soap, &soap_tmp___ns8__SetVideoSourceConfiguration);
	if (!soap_get___ns8__SetVideoSourceConfiguration(soap, &soap_tmp___ns8__SetVideoSourceConfiguration, "-ns8:SetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetVideoSourceConfiguration(soap_tmp___ns8__SetVideoSourceConfiguration.ns8__SetVideoSourceConfiguration, ns8__SetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__SetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__SetVideoSourceConfigurationResponse.soap_put(soap, "ns8:SetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__SetVideoSourceConfigurationResponse.soap_put(soap, "ns8:SetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__SetVideoEncoderConfiguration(Media2BindingService *soap)
{	struct __ns8__SetVideoEncoderConfiguration soap_tmp___ns8__SetVideoEncoderConfiguration;
	ns8__SetConfigurationResponse ns8__SetVideoEncoderConfigurationResponse;
	ns8__SetVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___ns8__SetVideoEncoderConfiguration(soap, &soap_tmp___ns8__SetVideoEncoderConfiguration);
	if (!soap_get___ns8__SetVideoEncoderConfiguration(soap, &soap_tmp___ns8__SetVideoEncoderConfiguration, "-ns8:SetVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetVideoEncoderConfiguration(soap_tmp___ns8__SetVideoEncoderConfiguration.ns8__SetVideoEncoderConfiguration, ns8__SetVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__SetVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__SetVideoEncoderConfigurationResponse.soap_put(soap, "ns8:SetVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__SetVideoEncoderConfigurationResponse.soap_put(soap, "ns8:SetVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__SetAudioSourceConfiguration(Media2BindingService *soap)
{	struct __ns8__SetAudioSourceConfiguration soap_tmp___ns8__SetAudioSourceConfiguration;
	ns8__SetConfigurationResponse ns8__SetAudioSourceConfigurationResponse;
	ns8__SetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___ns8__SetAudioSourceConfiguration(soap, &soap_tmp___ns8__SetAudioSourceConfiguration);
	if (!soap_get___ns8__SetAudioSourceConfiguration(soap, &soap_tmp___ns8__SetAudioSourceConfiguration, "-ns8:SetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetAudioSourceConfiguration(soap_tmp___ns8__SetAudioSourceConfiguration.ns8__SetAudioSourceConfiguration, ns8__SetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__SetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__SetAudioSourceConfigurationResponse.soap_put(soap, "ns8:SetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__SetAudioSourceConfigurationResponse.soap_put(soap, "ns8:SetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__SetAudioEncoderConfiguration(Media2BindingService *soap)
{	struct __ns8__SetAudioEncoderConfiguration soap_tmp___ns8__SetAudioEncoderConfiguration;
	ns8__SetConfigurationResponse ns8__SetAudioEncoderConfigurationResponse;
	ns8__SetAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___ns8__SetAudioEncoderConfiguration(soap, &soap_tmp___ns8__SetAudioEncoderConfiguration);
	if (!soap_get___ns8__SetAudioEncoderConfiguration(soap, &soap_tmp___ns8__SetAudioEncoderConfiguration, "-ns8:SetAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetAudioEncoderConfiguration(soap_tmp___ns8__SetAudioEncoderConfiguration.ns8__SetAudioEncoderConfiguration, ns8__SetAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__SetAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__SetAudioEncoderConfigurationResponse.soap_put(soap, "ns8:SetAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__SetAudioEncoderConfigurationResponse.soap_put(soap, "ns8:SetAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__SetMetadataConfiguration(Media2BindingService *soap)
{	struct __ns8__SetMetadataConfiguration soap_tmp___ns8__SetMetadataConfiguration;
	ns8__SetConfigurationResponse ns8__SetMetadataConfigurationResponse;
	ns8__SetMetadataConfigurationResponse.soap_default(soap);
	soap_default___ns8__SetMetadataConfiguration(soap, &soap_tmp___ns8__SetMetadataConfiguration);
	if (!soap_get___ns8__SetMetadataConfiguration(soap, &soap_tmp___ns8__SetMetadataConfiguration, "-ns8:SetMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetMetadataConfiguration(soap_tmp___ns8__SetMetadataConfiguration.ns8__SetMetadataConfiguration, ns8__SetMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__SetMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__SetMetadataConfigurationResponse.soap_put(soap, "ns8:SetMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__SetMetadataConfigurationResponse.soap_put(soap, "ns8:SetMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__SetAudioOutputConfiguration(Media2BindingService *soap)
{	struct __ns8__SetAudioOutputConfiguration soap_tmp___ns8__SetAudioOutputConfiguration;
	ns8__SetConfigurationResponse ns8__SetAudioOutputConfigurationResponse;
	ns8__SetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___ns8__SetAudioOutputConfiguration(soap, &soap_tmp___ns8__SetAudioOutputConfiguration);
	if (!soap_get___ns8__SetAudioOutputConfiguration(soap, &soap_tmp___ns8__SetAudioOutputConfiguration, "-ns8:SetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetAudioOutputConfiguration(soap_tmp___ns8__SetAudioOutputConfiguration.ns8__SetAudioOutputConfiguration, ns8__SetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__SetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__SetAudioOutputConfigurationResponse.soap_put(soap, "ns8:SetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__SetAudioOutputConfigurationResponse.soap_put(soap, "ns8:SetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__SetAudioDecoderConfiguration(Media2BindingService *soap)
{	struct __ns8__SetAudioDecoderConfiguration soap_tmp___ns8__SetAudioDecoderConfiguration;
	ns8__SetConfigurationResponse ns8__SetAudioDecoderConfigurationResponse;
	ns8__SetAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___ns8__SetAudioDecoderConfiguration(soap, &soap_tmp___ns8__SetAudioDecoderConfiguration);
	if (!soap_get___ns8__SetAudioDecoderConfiguration(soap, &soap_tmp___ns8__SetAudioDecoderConfiguration, "-ns8:SetAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetAudioDecoderConfiguration(soap_tmp___ns8__SetAudioDecoderConfiguration.ns8__SetAudioDecoderConfiguration, ns8__SetAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__SetAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__SetAudioDecoderConfigurationResponse.soap_put(soap, "ns8:SetAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__SetAudioDecoderConfigurationResponse.soap_put(soap, "ns8:SetAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetVideoSourceConfigurationOptions(Media2BindingService *soap)
{	struct __ns8__GetVideoSourceConfigurationOptions soap_tmp___ns8__GetVideoSourceConfigurationOptions;
	_ns8__GetVideoSourceConfigurationOptionsResponse ns8__GetVideoSourceConfigurationOptionsResponse;
	ns8__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___ns8__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns8__GetVideoSourceConfigurationOptions);
	if (!soap_get___ns8__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns8__GetVideoSourceConfigurationOptions, "-ns8:GetVideoSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoSourceConfigurationOptions(soap_tmp___ns8__GetVideoSourceConfigurationOptions.ns8__GetVideoSourceConfigurationOptions, ns8__GetVideoSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetVideoSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "ns8:GetVideoSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "ns8:GetVideoSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetVideoEncoderConfigurationOptions(Media2BindingService *soap)
{	struct __ns8__GetVideoEncoderConfigurationOptions soap_tmp___ns8__GetVideoEncoderConfigurationOptions;
	_ns8__GetVideoEncoderConfigurationOptionsResponse ns8__GetVideoEncoderConfigurationOptionsResponse;
	ns8__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___ns8__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns8__GetVideoEncoderConfigurationOptions);
	if (!soap_get___ns8__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns8__GetVideoEncoderConfigurationOptions, "-ns8:GetVideoEncoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoEncoderConfigurationOptions(soap_tmp___ns8__GetVideoEncoderConfigurationOptions.ns8__GetVideoEncoderConfigurationOptions, ns8__GetVideoEncoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetVideoEncoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetVideoEncoderConfigurationOptionsResponse.soap_put(soap, "ns8:GetVideoEncoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetVideoEncoderConfigurationOptionsResponse.soap_put(soap, "ns8:GetVideoEncoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetAudioSourceConfigurationOptions(Media2BindingService *soap)
{	struct __ns8__GetAudioSourceConfigurationOptions soap_tmp___ns8__GetAudioSourceConfigurationOptions;
	_ns8__GetAudioSourceConfigurationOptionsResponse ns8__GetAudioSourceConfigurationOptionsResponse;
	ns8__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___ns8__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns8__GetAudioSourceConfigurationOptions);
	if (!soap_get___ns8__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns8__GetAudioSourceConfigurationOptions, "-ns8:GetAudioSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioSourceConfigurationOptions(soap_tmp___ns8__GetAudioSourceConfigurationOptions.ns8__GetAudioSourceConfigurationOptions, ns8__GetAudioSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetAudioSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "ns8:GetAudioSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "ns8:GetAudioSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetAudioEncoderConfigurationOptions(Media2BindingService *soap)
{	struct __ns8__GetAudioEncoderConfigurationOptions soap_tmp___ns8__GetAudioEncoderConfigurationOptions;
	_ns8__GetAudioEncoderConfigurationOptionsResponse ns8__GetAudioEncoderConfigurationOptionsResponse;
	ns8__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___ns8__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns8__GetAudioEncoderConfigurationOptions);
	if (!soap_get___ns8__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns8__GetAudioEncoderConfigurationOptions, "-ns8:GetAudioEncoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioEncoderConfigurationOptions(soap_tmp___ns8__GetAudioEncoderConfigurationOptions.ns8__GetAudioEncoderConfigurationOptions, ns8__GetAudioEncoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetAudioEncoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetAudioEncoderConfigurationOptionsResponse.soap_put(soap, "ns8:GetAudioEncoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetAudioEncoderConfigurationOptionsResponse.soap_put(soap, "ns8:GetAudioEncoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetMetadataConfigurationOptions(Media2BindingService *soap)
{	struct __ns8__GetMetadataConfigurationOptions soap_tmp___ns8__GetMetadataConfigurationOptions;
	_ns8__GetMetadataConfigurationOptionsResponse ns8__GetMetadataConfigurationOptionsResponse;
	ns8__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	soap_default___ns8__GetMetadataConfigurationOptions(soap, &soap_tmp___ns8__GetMetadataConfigurationOptions);
	if (!soap_get___ns8__GetMetadataConfigurationOptions(soap, &soap_tmp___ns8__GetMetadataConfigurationOptions, "-ns8:GetMetadataConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetMetadataConfigurationOptions(soap_tmp___ns8__GetMetadataConfigurationOptions.ns8__GetMetadataConfigurationOptions, ns8__GetMetadataConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetMetadataConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetMetadataConfigurationOptionsResponse.soap_put(soap, "ns8:GetMetadataConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetMetadataConfigurationOptionsResponse.soap_put(soap, "ns8:GetMetadataConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetAudioOutputConfigurationOptions(Media2BindingService *soap)
{	struct __ns8__GetAudioOutputConfigurationOptions soap_tmp___ns8__GetAudioOutputConfigurationOptions;
	_ns8__GetAudioOutputConfigurationOptionsResponse ns8__GetAudioOutputConfigurationOptionsResponse;
	ns8__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	soap_default___ns8__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns8__GetAudioOutputConfigurationOptions);
	if (!soap_get___ns8__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns8__GetAudioOutputConfigurationOptions, "-ns8:GetAudioOutputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioOutputConfigurationOptions(soap_tmp___ns8__GetAudioOutputConfigurationOptions.ns8__GetAudioOutputConfigurationOptions, ns8__GetAudioOutputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetAudioOutputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "ns8:GetAudioOutputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "ns8:GetAudioOutputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetAudioDecoderConfigurationOptions(Media2BindingService *soap)
{	struct __ns8__GetAudioDecoderConfigurationOptions soap_tmp___ns8__GetAudioDecoderConfigurationOptions;
	_ns8__GetAudioDecoderConfigurationOptionsResponse ns8__GetAudioDecoderConfigurationOptionsResponse;
	ns8__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___ns8__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns8__GetAudioDecoderConfigurationOptions);
	if (!soap_get___ns8__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns8__GetAudioDecoderConfigurationOptions, "-ns8:GetAudioDecoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioDecoderConfigurationOptions(soap_tmp___ns8__GetAudioDecoderConfigurationOptions.ns8__GetAudioDecoderConfigurationOptions, ns8__GetAudioDecoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetAudioDecoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetAudioDecoderConfigurationOptionsResponse.soap_put(soap, "ns8:GetAudioDecoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetAudioDecoderConfigurationOptionsResponse.soap_put(soap, "ns8:GetAudioDecoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetVideoEncoderInstances(Media2BindingService *soap)
{	struct __ns8__GetVideoEncoderInstances soap_tmp___ns8__GetVideoEncoderInstances;
	_ns8__GetVideoEncoderInstancesResponse ns8__GetVideoEncoderInstancesResponse;
	ns8__GetVideoEncoderInstancesResponse.soap_default(soap);
	soap_default___ns8__GetVideoEncoderInstances(soap, &soap_tmp___ns8__GetVideoEncoderInstances);
	if (!soap_get___ns8__GetVideoEncoderInstances(soap, &soap_tmp___ns8__GetVideoEncoderInstances, "-ns8:GetVideoEncoderInstances", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoEncoderInstances(soap_tmp___ns8__GetVideoEncoderInstances.ns8__GetVideoEncoderInstances, ns8__GetVideoEncoderInstancesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetVideoEncoderInstancesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetVideoEncoderInstancesResponse.soap_put(soap, "ns8:GetVideoEncoderInstancesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetVideoEncoderInstancesResponse.soap_put(soap, "ns8:GetVideoEncoderInstancesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetStreamUri(Media2BindingService *soap)
{	struct __ns8__GetStreamUri soap_tmp___ns8__GetStreamUri;
	_ns8__GetStreamUriResponse ns8__GetStreamUriResponse;
	ns8__GetStreamUriResponse.soap_default(soap);
	soap_default___ns8__GetStreamUri(soap, &soap_tmp___ns8__GetStreamUri);
	if (!soap_get___ns8__GetStreamUri(soap, &soap_tmp___ns8__GetStreamUri, "-ns8:GetStreamUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetStreamUri(soap_tmp___ns8__GetStreamUri.ns8__GetStreamUri, ns8__GetStreamUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetStreamUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetStreamUriResponse.soap_put(soap, "ns8:GetStreamUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetStreamUriResponse.soap_put(soap, "ns8:GetStreamUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__StartMulticastStreaming(Media2BindingService *soap)
{	struct __ns8__StartMulticastStreaming soap_tmp___ns8__StartMulticastStreaming;
	ns8__SetConfigurationResponse ns8__StartMulticastStreamingResponse;
	ns8__StartMulticastStreamingResponse.soap_default(soap);
	soap_default___ns8__StartMulticastStreaming(soap, &soap_tmp___ns8__StartMulticastStreaming);
	if (!soap_get___ns8__StartMulticastStreaming(soap, &soap_tmp___ns8__StartMulticastStreaming, "-ns8:StartMulticastStreaming", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StartMulticastStreaming(soap_tmp___ns8__StartMulticastStreaming.ns8__StartMulticastStreaming, ns8__StartMulticastStreamingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__StartMulticastStreamingResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__StartMulticastStreamingResponse.soap_put(soap, "ns8:StartMulticastStreamingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__StartMulticastStreamingResponse.soap_put(soap, "ns8:StartMulticastStreamingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__StopMulticastStreaming(Media2BindingService *soap)
{	struct __ns8__StopMulticastStreaming soap_tmp___ns8__StopMulticastStreaming;
	ns8__SetConfigurationResponse ns8__StopMulticastStreamingResponse;
	ns8__StopMulticastStreamingResponse.soap_default(soap);
	soap_default___ns8__StopMulticastStreaming(soap, &soap_tmp___ns8__StopMulticastStreaming);
	if (!soap_get___ns8__StopMulticastStreaming(soap, &soap_tmp___ns8__StopMulticastStreaming, "-ns8:StopMulticastStreaming", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StopMulticastStreaming(soap_tmp___ns8__StopMulticastStreaming.ns8__StopMulticastStreaming, ns8__StopMulticastStreamingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__StopMulticastStreamingResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__StopMulticastStreamingResponse.soap_put(soap, "ns8:StopMulticastStreamingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__StopMulticastStreamingResponse.soap_put(soap, "ns8:StopMulticastStreamingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__SetSynchronizationPoint(Media2BindingService *soap)
{	struct __ns8__SetSynchronizationPoint soap_tmp___ns8__SetSynchronizationPoint;
	_ns8__SetSynchronizationPointResponse ns8__SetSynchronizationPointResponse;
	ns8__SetSynchronizationPointResponse.soap_default(soap);
	soap_default___ns8__SetSynchronizationPoint(soap, &soap_tmp___ns8__SetSynchronizationPoint);
	if (!soap_get___ns8__SetSynchronizationPoint(soap, &soap_tmp___ns8__SetSynchronizationPoint, "-ns8:SetSynchronizationPoint", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetSynchronizationPoint(soap_tmp___ns8__SetSynchronizationPoint.ns8__SetSynchronizationPoint, ns8__SetSynchronizationPointResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__SetSynchronizationPointResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__SetSynchronizationPointResponse.soap_put(soap, "ns8:SetSynchronizationPointResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__SetSynchronizationPointResponse.soap_put(soap, "ns8:SetSynchronizationPointResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetSnapshotUri(Media2BindingService *soap)
{	struct __ns8__GetSnapshotUri soap_tmp___ns8__GetSnapshotUri;
	_ns8__GetSnapshotUriResponse ns8__GetSnapshotUriResponse;
	ns8__GetSnapshotUriResponse.soap_default(soap);
	soap_default___ns8__GetSnapshotUri(soap, &soap_tmp___ns8__GetSnapshotUri);
	if (!soap_get___ns8__GetSnapshotUri(soap, &soap_tmp___ns8__GetSnapshotUri, "-ns8:GetSnapshotUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSnapshotUri(soap_tmp___ns8__GetSnapshotUri.ns8__GetSnapshotUri, ns8__GetSnapshotUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetSnapshotUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetSnapshotUriResponse.soap_put(soap, "ns8:GetSnapshotUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetSnapshotUriResponse.soap_put(soap, "ns8:GetSnapshotUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetVideoSourceModes(Media2BindingService *soap)
{	struct __ns8__GetVideoSourceModes soap_tmp___ns8__GetVideoSourceModes;
	_ns8__GetVideoSourceModesResponse ns8__GetVideoSourceModesResponse;
	ns8__GetVideoSourceModesResponse.soap_default(soap);
	soap_default___ns8__GetVideoSourceModes(soap, &soap_tmp___ns8__GetVideoSourceModes);
	if (!soap_get___ns8__GetVideoSourceModes(soap, &soap_tmp___ns8__GetVideoSourceModes, "-ns8:GetVideoSourceModes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoSourceModes(soap_tmp___ns8__GetVideoSourceModes.ns8__GetVideoSourceModes, ns8__GetVideoSourceModesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetVideoSourceModesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetVideoSourceModesResponse.soap_put(soap, "ns8:GetVideoSourceModesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetVideoSourceModesResponse.soap_put(soap, "ns8:GetVideoSourceModesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__SetVideoSourceMode(Media2BindingService *soap)
{	struct __ns8__SetVideoSourceMode soap_tmp___ns8__SetVideoSourceMode;
	_ns8__SetVideoSourceModeResponse ns8__SetVideoSourceModeResponse;
	ns8__SetVideoSourceModeResponse.soap_default(soap);
	soap_default___ns8__SetVideoSourceMode(soap, &soap_tmp___ns8__SetVideoSourceMode);
	if (!soap_get___ns8__SetVideoSourceMode(soap, &soap_tmp___ns8__SetVideoSourceMode, "-ns8:SetVideoSourceMode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetVideoSourceMode(soap_tmp___ns8__SetVideoSourceMode.ns8__SetVideoSourceMode, ns8__SetVideoSourceModeResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__SetVideoSourceModeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__SetVideoSourceModeResponse.soap_put(soap, "ns8:SetVideoSourceModeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__SetVideoSourceModeResponse.soap_put(soap, "ns8:SetVideoSourceModeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetOSDs(Media2BindingService *soap)
{	struct __ns8__GetOSDs soap_tmp___ns8__GetOSDs;
	_ns8__GetOSDsResponse ns8__GetOSDsResponse;
	ns8__GetOSDsResponse.soap_default(soap);
	soap_default___ns8__GetOSDs(soap, &soap_tmp___ns8__GetOSDs);
	if (!soap_get___ns8__GetOSDs(soap, &soap_tmp___ns8__GetOSDs, "-ns8:GetOSDs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetOSDs(soap_tmp___ns8__GetOSDs.ns8__GetOSDs, ns8__GetOSDsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetOSDsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetOSDsResponse.soap_put(soap, "ns8:GetOSDsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetOSDsResponse.soap_put(soap, "ns8:GetOSDsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetOSDOptions(Media2BindingService *soap)
{	struct __ns8__GetOSDOptions soap_tmp___ns8__GetOSDOptions;
	_ns8__GetOSDOptionsResponse ns8__GetOSDOptionsResponse;
	ns8__GetOSDOptionsResponse.soap_default(soap);
	soap_default___ns8__GetOSDOptions(soap, &soap_tmp___ns8__GetOSDOptions);
	if (!soap_get___ns8__GetOSDOptions(soap, &soap_tmp___ns8__GetOSDOptions, "-ns8:GetOSDOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetOSDOptions(soap_tmp___ns8__GetOSDOptions.ns8__GetOSDOptions, ns8__GetOSDOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetOSDOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetOSDOptionsResponse.soap_put(soap, "ns8:GetOSDOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetOSDOptionsResponse.soap_put(soap, "ns8:GetOSDOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__SetOSD(Media2BindingService *soap)
{	struct __ns8__SetOSD soap_tmp___ns8__SetOSD;
	ns8__SetConfigurationResponse ns8__SetOSDResponse;
	ns8__SetOSDResponse.soap_default(soap);
	soap_default___ns8__SetOSD(soap, &soap_tmp___ns8__SetOSD);
	if (!soap_get___ns8__SetOSD(soap, &soap_tmp___ns8__SetOSD, "-ns8:SetOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetOSD(soap_tmp___ns8__SetOSD.ns8__SetOSD, ns8__SetOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__SetOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__SetOSDResponse.soap_put(soap, "ns8:SetOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__SetOSDResponse.soap_put(soap, "ns8:SetOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__CreateOSD(Media2BindingService *soap)
{	struct __ns8__CreateOSD soap_tmp___ns8__CreateOSD;
	_ns8__CreateOSDResponse ns8__CreateOSDResponse;
	ns8__CreateOSDResponse.soap_default(soap);
	soap_default___ns8__CreateOSD(soap, &soap_tmp___ns8__CreateOSD);
	if (!soap_get___ns8__CreateOSD(soap, &soap_tmp___ns8__CreateOSD, "-ns8:CreateOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateOSD(soap_tmp___ns8__CreateOSD.ns8__CreateOSD, ns8__CreateOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__CreateOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__CreateOSDResponse.soap_put(soap, "ns8:CreateOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__CreateOSDResponse.soap_put(soap, "ns8:CreateOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__DeleteOSD(Media2BindingService *soap)
{	struct __ns8__DeleteOSD soap_tmp___ns8__DeleteOSD;
	ns8__SetConfigurationResponse ns8__DeleteOSDResponse;
	ns8__DeleteOSDResponse.soap_default(soap);
	soap_default___ns8__DeleteOSD(soap, &soap_tmp___ns8__DeleteOSD);
	if (!soap_get___ns8__DeleteOSD(soap, &soap_tmp___ns8__DeleteOSD, "-ns8:DeleteOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteOSD(soap_tmp___ns8__DeleteOSD.ns8__DeleteOSD, ns8__DeleteOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__DeleteOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__DeleteOSDResponse.soap_put(soap, "ns8:DeleteOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__DeleteOSDResponse.soap_put(soap, "ns8:DeleteOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetMasks(Media2BindingService *soap)
{	struct __ns8__GetMasks soap_tmp___ns8__GetMasks;
	_ns8__GetMasksResponse ns8__GetMasksResponse;
	ns8__GetMasksResponse.soap_default(soap);
	soap_default___ns8__GetMasks(soap, &soap_tmp___ns8__GetMasks);
	if (!soap_get___ns8__GetMasks(soap, &soap_tmp___ns8__GetMasks, "-ns8:GetMasks", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetMasks(soap_tmp___ns8__GetMasks.ns8__GetMasks, ns8__GetMasksResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetMasksResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetMasksResponse.soap_put(soap, "ns8:GetMasksResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetMasksResponse.soap_put(soap, "ns8:GetMasksResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetMaskOptions(Media2BindingService *soap)
{	struct __ns8__GetMaskOptions soap_tmp___ns8__GetMaskOptions;
	_ns8__GetMaskOptionsResponse ns8__GetMaskOptionsResponse;
	ns8__GetMaskOptionsResponse.soap_default(soap);
	soap_default___ns8__GetMaskOptions(soap, &soap_tmp___ns8__GetMaskOptions);
	if (!soap_get___ns8__GetMaskOptions(soap, &soap_tmp___ns8__GetMaskOptions, "-ns8:GetMaskOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetMaskOptions(soap_tmp___ns8__GetMaskOptions.ns8__GetMaskOptions, ns8__GetMaskOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetMaskOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetMaskOptionsResponse.soap_put(soap, "ns8:GetMaskOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetMaskOptionsResponse.soap_put(soap, "ns8:GetMaskOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__SetMask(Media2BindingService *soap)
{	struct __ns8__SetMask soap_tmp___ns8__SetMask;
	ns8__SetConfigurationResponse ns8__SetMaskResponse;
	ns8__SetMaskResponse.soap_default(soap);
	soap_default___ns8__SetMask(soap, &soap_tmp___ns8__SetMask);
	if (!soap_get___ns8__SetMask(soap, &soap_tmp___ns8__SetMask, "-ns8:SetMask", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetMask(soap_tmp___ns8__SetMask.ns8__SetMask, ns8__SetMaskResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__SetMaskResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__SetMaskResponse.soap_put(soap, "ns8:SetMaskResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__SetMaskResponse.soap_put(soap, "ns8:SetMaskResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__CreateMask(Media2BindingService *soap)
{	struct __ns8__CreateMask soap_tmp___ns8__CreateMask;
	_ns8__CreateMaskResponse ns8__CreateMaskResponse;
	ns8__CreateMaskResponse.soap_default(soap);
	soap_default___ns8__CreateMask(soap, &soap_tmp___ns8__CreateMask);
	if (!soap_get___ns8__CreateMask(soap, &soap_tmp___ns8__CreateMask, "-ns8:CreateMask", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateMask(soap_tmp___ns8__CreateMask.ns8__CreateMask, ns8__CreateMaskResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__CreateMaskResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__CreateMaskResponse.soap_put(soap, "ns8:CreateMaskResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__CreateMaskResponse.soap_put(soap, "ns8:CreateMaskResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__DeleteMask(Media2BindingService *soap)
{	struct __ns8__DeleteMask soap_tmp___ns8__DeleteMask;
	ns8__SetConfigurationResponse ns8__DeleteMaskResponse;
	ns8__DeleteMaskResponse.soap_default(soap);
	soap_default___ns8__DeleteMask(soap, &soap_tmp___ns8__DeleteMask);
	if (!soap_get___ns8__DeleteMask(soap, &soap_tmp___ns8__DeleteMask, "-ns8:DeleteMask", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteMask(soap_tmp___ns8__DeleteMask.ns8__DeleteMask, ns8__DeleteMaskResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__DeleteMaskResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__DeleteMaskResponse.soap_put(soap, "ns8:DeleteMaskResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__DeleteMaskResponse.soap_put(soap, "ns8:DeleteMaskResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
