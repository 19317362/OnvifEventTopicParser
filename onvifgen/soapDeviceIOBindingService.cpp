/* soapDeviceIOBindingService.cpp
   Generated by gSOAP 2.8.66 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapDeviceIOBindingService.h"

DeviceIOBindingService::DeviceIOBindingService() : soap(SOAP_IO_DEFAULT)
{	DeviceIOBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

DeviceIOBindingService::DeviceIOBindingService(const DeviceIOBindingService& rhs)
{	soap_copy_context(this, &rhs);
}

DeviceIOBindingService::DeviceIOBindingService(const struct soap &_soap) : soap(_soap)
{ }

DeviceIOBindingService::DeviceIOBindingService(soap_mode iomode) : soap(iomode)
{	DeviceIOBindingService_init(iomode, iomode);
}

DeviceIOBindingService::DeviceIOBindingService(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	DeviceIOBindingService_init(imode, omode);
}

DeviceIOBindingService::~DeviceIOBindingService()
{
	this->destroy();
}

void DeviceIOBindingService::DeviceIOBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver20/analytics", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver20/analytics/radiometry", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver10/network/wsdl/", NULL, NULL},
        {"ns13", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"ns14", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"ns6", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

void DeviceIOBindingService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void DeviceIOBindingService::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	DeviceIOBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
DeviceIOBindingService *DeviceIOBindingService::copy()
{	DeviceIOBindingService *dup = SOAP_NEW_UNMANAGED(DeviceIOBindingService(*(struct soap*)this));
	return dup;
}
#endif

DeviceIOBindingService& DeviceIOBindingService::operator=(const DeviceIOBindingService& rhs)
{	soap_done(this);
	soap_copy_context(this, &rhs);
	return *this;
}

int DeviceIOBindingService::soap_close_socket()
{	return soap_closesock(this);
}

int DeviceIOBindingService::soap_force_close_socket()
{	return soap_force_closesock(this);
}

int DeviceIOBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int DeviceIOBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int DeviceIOBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int DeviceIOBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void DeviceIOBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void DeviceIOBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *DeviceIOBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void DeviceIOBindingService::soap_noheader()
{	this->header = NULL;
}

void DeviceIOBindingService::soap_header(struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence)
{	::soap_header(this);
	this->header->wsse__Security = wsse__Security;
	this->header->wsa5__MessageID = wsa5__MessageID;
	this->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->header->wsa5__From = wsa5__From;
	this->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->header->wsa5__FaultTo = wsa5__FaultTo;
	this->header->wsa5__To = wsa5__To;
	this->header->wsa5__Action = wsa5__Action;
	this->header->chan__ChannelInstance = chan__ChannelInstance;
	this->header->wsdd__AppSequence = wsdd__AppSequence;
}

::SOAP_ENV__Header *DeviceIOBindingService::soap_header()
{	return this->header;
}

#ifndef WITH_NOIO
int DeviceIOBindingService::run(int port)
{	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int DeviceIOBindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->error;
}
#endif

SOAP_SOCKET DeviceIOBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET DeviceIOBindingService::accept()
{	return soap_accept(this);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int DeviceIOBindingService::ssl_accept()
{	return soap_ssl_accept(this);
}
#endif
#endif

int DeviceIOBindingService::serve()
{
#ifndef WITH_FASTCGI
	this->keep_alive = this->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->keep_alive > 0 && this->max_keep_alive > 0)
			this->keep_alive--;
#endif
		if (soap_begin_serve(this))
		{	if (this->error >= SOAP_STOP)
				continue;
			return this->error;
		}
		if ((dispatch() || (this->fserveloop && this->fserveloop(this))) && this->error && this->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___tmd__GetServiceCapabilities(DeviceIOBindingService*);
static int serve___tmd__GetRelayOutputOptions(DeviceIOBindingService*);
static int serve___tmd__GetAudioSources(DeviceIOBindingService*);
static int serve___tmd__GetAudioOutputs(DeviceIOBindingService*);
static int serve___tmd__GetVideoSources(DeviceIOBindingService*);
static int serve___tmd__GetVideoOutputs(DeviceIOBindingService*);
static int serve___tmd__GetVideoSourceConfiguration(DeviceIOBindingService*);
static int serve___tmd__GetVideoOutputConfiguration(DeviceIOBindingService*);
static int serve___tmd__GetAudioSourceConfiguration(DeviceIOBindingService*);
static int serve___tmd__GetAudioOutputConfiguration(DeviceIOBindingService*);
static int serve___tmd__SetVideoSourceConfiguration(DeviceIOBindingService*);
static int serve___tmd__SetVideoOutputConfiguration(DeviceIOBindingService*);
static int serve___tmd__SetAudioSourceConfiguration(DeviceIOBindingService*);
static int serve___tmd__SetAudioOutputConfiguration(DeviceIOBindingService*);
static int serve___tmd__GetVideoSourceConfigurationOptions(DeviceIOBindingService*);
static int serve___tmd__GetVideoOutputConfigurationOptions(DeviceIOBindingService*);
static int serve___tmd__GetAudioSourceConfigurationOptions(DeviceIOBindingService*);
static int serve___tmd__GetAudioOutputConfigurationOptions(DeviceIOBindingService*);
static int serve___tmd__GetRelayOutputs(DeviceIOBindingService*);
static int serve___tmd__SetRelayOutputSettings(DeviceIOBindingService*);
static int serve___tmd__SetRelayOutputState(DeviceIOBindingService*);
static int serve___tmd__GetDigitalInputs(DeviceIOBindingService*);
static int serve___tmd__GetDigitalInputConfigurationOptions(DeviceIOBindingService*);
static int serve___tmd__SetDigitalInputConfigurations(DeviceIOBindingService*);
static int serve___tmd__GetSerialPorts(DeviceIOBindingService*);
static int serve___tmd__GetSerialPortConfiguration(DeviceIOBindingService*);
static int serve___tmd__SetSerialPortConfiguration(DeviceIOBindingService*);
static int serve___tmd__GetSerialPortConfigurationOptions(DeviceIOBindingService*);
static int serve___tmd__SendReceiveSerialCommand(DeviceIOBindingService*);

int DeviceIOBindingService::dispatch()
{
	soap_peek_element(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetServiceCapabilities"))
		return serve___tmd__GetServiceCapabilities(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetRelayOutputOptions"))
		return serve___tmd__GetRelayOutputOptions(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetAudioSources"))
		return serve___tmd__GetAudioSources(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetAudioOutputs"))
		return serve___tmd__GetAudioOutputs(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetVideoSources"))
		return serve___tmd__GetVideoSources(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetVideoOutputs"))
		return serve___tmd__GetVideoOutputs(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetVideoSourceConfiguration"))
		return serve___tmd__GetVideoSourceConfiguration(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetVideoOutputConfiguration"))
		return serve___tmd__GetVideoOutputConfiguration(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetAudioSourceConfiguration"))
		return serve___tmd__GetAudioSourceConfiguration(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetAudioOutputConfiguration"))
		return serve___tmd__GetAudioOutputConfiguration(this);
	if (!soap_match_tag(this, this->tag, "tmd:SetVideoSourceConfiguration"))
		return serve___tmd__SetVideoSourceConfiguration(this);
	if (!soap_match_tag(this, this->tag, "tmd:SetVideoOutputConfiguration"))
		return serve___tmd__SetVideoOutputConfiguration(this);
	if (!soap_match_tag(this, this->tag, "tmd:SetAudioSourceConfiguration"))
		return serve___tmd__SetAudioSourceConfiguration(this);
	if (!soap_match_tag(this, this->tag, "tmd:SetAudioOutputConfiguration"))
		return serve___tmd__SetAudioOutputConfiguration(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetVideoSourceConfigurationOptions"))
		return serve___tmd__GetVideoSourceConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetVideoOutputConfigurationOptions"))
		return serve___tmd__GetVideoOutputConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetAudioSourceConfigurationOptions"))
		return serve___tmd__GetAudioSourceConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetAudioOutputConfigurationOptions"))
		return serve___tmd__GetAudioOutputConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "tds:GetRelayOutputs"))
		return serve___tmd__GetRelayOutputs(this);
	if (!soap_match_tag(this, this->tag, "tmd:SetRelayOutputSettings"))
		return serve___tmd__SetRelayOutputSettings(this);
	if (!soap_match_tag(this, this->tag, "tds:SetRelayOutputState"))
		return serve___tmd__SetRelayOutputState(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetDigitalInputs"))
		return serve___tmd__GetDigitalInputs(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetDigitalInputConfigurationOptions"))
		return serve___tmd__GetDigitalInputConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "tmd:SetDigitalInputConfigurations"))
		return serve___tmd__SetDigitalInputConfigurations(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetSerialPorts"))
		return serve___tmd__GetSerialPorts(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetSerialPortConfiguration"))
		return serve___tmd__GetSerialPortConfiguration(this);
	if (!soap_match_tag(this, this->tag, "tmd:SetSerialPortConfiguration"))
		return serve___tmd__SetSerialPortConfiguration(this);
	if (!soap_match_tag(this, this->tag, "tmd:GetSerialPortConfigurationOptions"))
		return serve___tmd__GetSerialPortConfigurationOptions(this);
	if (!soap_match_tag(this, this->tag, "tmd:SendReceiveSerialCommand"))
		return serve___tmd__SendReceiveSerialCommand(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve___tmd__GetServiceCapabilities(DeviceIOBindingService *soap)
{	struct __tmd__GetServiceCapabilities soap_tmp___tmd__GetServiceCapabilities;
	_tmd__GetServiceCapabilitiesResponse tmd__GetServiceCapabilitiesResponse;
	tmd__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___tmd__GetServiceCapabilities(soap, &soap_tmp___tmd__GetServiceCapabilities);
	if (!soap_get___tmd__GetServiceCapabilities(soap, &soap_tmp___tmd__GetServiceCapabilities, "-tmd:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetServiceCapabilities(soap_tmp___tmd__GetServiceCapabilities.tmd__GetServiceCapabilities, tmd__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetServiceCapabilitiesResponse.soap_put(soap, "tmd:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetServiceCapabilitiesResponse.soap_put(soap, "tmd:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetRelayOutputOptions(DeviceIOBindingService *soap)
{	struct __tmd__GetRelayOutputOptions soap_tmp___tmd__GetRelayOutputOptions;
	_tmd__GetRelayOutputOptionsResponse tmd__GetRelayOutputOptionsResponse;
	tmd__GetRelayOutputOptionsResponse.soap_default(soap);
	soap_default___tmd__GetRelayOutputOptions(soap, &soap_tmp___tmd__GetRelayOutputOptions);
	if (!soap_get___tmd__GetRelayOutputOptions(soap, &soap_tmp___tmd__GetRelayOutputOptions, "-tmd:GetRelayOutputOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetRelayOutputOptions(soap_tmp___tmd__GetRelayOutputOptions.tmd__GetRelayOutputOptions, tmd__GetRelayOutputOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetRelayOutputOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetRelayOutputOptionsResponse.soap_put(soap, "tmd:GetRelayOutputOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetRelayOutputOptionsResponse.soap_put(soap, "tmd:GetRelayOutputOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetAudioSources(DeviceIOBindingService *soap)
{	struct __tmd__GetAudioSources soap_tmp___tmd__GetAudioSources;
	tmd__GetResponse tmd__GetAudioSourcesResponse;
	tmd__GetAudioSourcesResponse.soap_default(soap);
	soap_default___tmd__GetAudioSources(soap, &soap_tmp___tmd__GetAudioSources);
	if (!soap_get___tmd__GetAudioSources(soap, &soap_tmp___tmd__GetAudioSources, "-tmd:GetAudioSources", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioSources(soap_tmp___tmd__GetAudioSources.tmd__GetAudioSources, tmd__GetAudioSourcesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetAudioSourcesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetAudioSourcesResponse.soap_put(soap, "tmd:GetAudioSourcesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetAudioSourcesResponse.soap_put(soap, "tmd:GetAudioSourcesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetAudioOutputs(DeviceIOBindingService *soap)
{	struct __tmd__GetAudioOutputs soap_tmp___tmd__GetAudioOutputs;
	tmd__GetResponse tmd__GetAudioOutputsResponse;
	tmd__GetAudioOutputsResponse.soap_default(soap);
	soap_default___tmd__GetAudioOutputs(soap, &soap_tmp___tmd__GetAudioOutputs);
	if (!soap_get___tmd__GetAudioOutputs(soap, &soap_tmp___tmd__GetAudioOutputs, "-tmd:GetAudioOutputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioOutputs(soap_tmp___tmd__GetAudioOutputs.tmd__GetAudioOutputs, tmd__GetAudioOutputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetAudioOutputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetAudioOutputsResponse.soap_put(soap, "tmd:GetAudioOutputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetAudioOutputsResponse.soap_put(soap, "tmd:GetAudioOutputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetVideoSources(DeviceIOBindingService *soap)
{	struct __tmd__GetVideoSources soap_tmp___tmd__GetVideoSources;
	tmd__GetResponse tmd__GetVideoSourcesResponse;
	tmd__GetVideoSourcesResponse.soap_default(soap);
	soap_default___tmd__GetVideoSources(soap, &soap_tmp___tmd__GetVideoSources);
	if (!soap_get___tmd__GetVideoSources(soap, &soap_tmp___tmd__GetVideoSources, "-tmd:GetVideoSources", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoSources(soap_tmp___tmd__GetVideoSources.tmd__GetVideoSources, tmd__GetVideoSourcesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetVideoSourcesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetVideoSourcesResponse.soap_put(soap, "tmd:GetVideoSourcesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetVideoSourcesResponse.soap_put(soap, "tmd:GetVideoSourcesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetVideoOutputs(DeviceIOBindingService *soap)
{	struct __tmd__GetVideoOutputs soap_tmp___tmd__GetVideoOutputs;
	_tmd__GetVideoOutputsResponse tmd__GetVideoOutputsResponse;
	tmd__GetVideoOutputsResponse.soap_default(soap);
	soap_default___tmd__GetVideoOutputs(soap, &soap_tmp___tmd__GetVideoOutputs);
	if (!soap_get___tmd__GetVideoOutputs(soap, &soap_tmp___tmd__GetVideoOutputs, "-tmd:GetVideoOutputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoOutputs(soap_tmp___tmd__GetVideoOutputs.tmd__GetVideoOutputs, tmd__GetVideoOutputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetVideoOutputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetVideoOutputsResponse.soap_put(soap, "tmd:GetVideoOutputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetVideoOutputsResponse.soap_put(soap, "tmd:GetVideoOutputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetVideoSourceConfiguration(DeviceIOBindingService *soap)
{	struct __tmd__GetVideoSourceConfiguration soap_tmp___tmd__GetVideoSourceConfiguration;
	_tmd__GetVideoSourceConfigurationResponse tmd__GetVideoSourceConfigurationResponse;
	tmd__GetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___tmd__GetVideoSourceConfiguration(soap, &soap_tmp___tmd__GetVideoSourceConfiguration);
	if (!soap_get___tmd__GetVideoSourceConfiguration(soap, &soap_tmp___tmd__GetVideoSourceConfiguration, "-tmd:GetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoSourceConfiguration(soap_tmp___tmd__GetVideoSourceConfiguration.tmd__GetVideoSourceConfiguration, tmd__GetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetVideoSourceConfigurationResponse.soap_put(soap, "tmd:GetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetVideoSourceConfigurationResponse.soap_put(soap, "tmd:GetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetVideoOutputConfiguration(DeviceIOBindingService *soap)
{	struct __tmd__GetVideoOutputConfiguration soap_tmp___tmd__GetVideoOutputConfiguration;
	_tmd__GetVideoOutputConfigurationResponse tmd__GetVideoOutputConfigurationResponse;
	tmd__GetVideoOutputConfigurationResponse.soap_default(soap);
	soap_default___tmd__GetVideoOutputConfiguration(soap, &soap_tmp___tmd__GetVideoOutputConfiguration);
	if (!soap_get___tmd__GetVideoOutputConfiguration(soap, &soap_tmp___tmd__GetVideoOutputConfiguration, "-tmd:GetVideoOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoOutputConfiguration(soap_tmp___tmd__GetVideoOutputConfiguration.tmd__GetVideoOutputConfiguration, tmd__GetVideoOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetVideoOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetVideoOutputConfigurationResponse.soap_put(soap, "tmd:GetVideoOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetVideoOutputConfigurationResponse.soap_put(soap, "tmd:GetVideoOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetAudioSourceConfiguration(DeviceIOBindingService *soap)
{	struct __tmd__GetAudioSourceConfiguration soap_tmp___tmd__GetAudioSourceConfiguration;
	_tmd__GetAudioSourceConfigurationResponse tmd__GetAudioSourceConfigurationResponse;
	tmd__GetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___tmd__GetAudioSourceConfiguration(soap, &soap_tmp___tmd__GetAudioSourceConfiguration);
	if (!soap_get___tmd__GetAudioSourceConfiguration(soap, &soap_tmp___tmd__GetAudioSourceConfiguration, "-tmd:GetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioSourceConfiguration(soap_tmp___tmd__GetAudioSourceConfiguration.tmd__GetAudioSourceConfiguration, tmd__GetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetAudioSourceConfigurationResponse.soap_put(soap, "tmd:GetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetAudioSourceConfigurationResponse.soap_put(soap, "tmd:GetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetAudioOutputConfiguration(DeviceIOBindingService *soap)
{	struct __tmd__GetAudioOutputConfiguration soap_tmp___tmd__GetAudioOutputConfiguration;
	_tmd__GetAudioOutputConfigurationResponse tmd__GetAudioOutputConfigurationResponse;
	tmd__GetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___tmd__GetAudioOutputConfiguration(soap, &soap_tmp___tmd__GetAudioOutputConfiguration);
	if (!soap_get___tmd__GetAudioOutputConfiguration(soap, &soap_tmp___tmd__GetAudioOutputConfiguration, "-tmd:GetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioOutputConfiguration(soap_tmp___tmd__GetAudioOutputConfiguration.tmd__GetAudioOutputConfiguration, tmd__GetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetAudioOutputConfigurationResponse.soap_put(soap, "tmd:GetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetAudioOutputConfigurationResponse.soap_put(soap, "tmd:GetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetVideoSourceConfiguration(DeviceIOBindingService *soap)
{	struct __tmd__SetVideoSourceConfiguration soap_tmp___tmd__SetVideoSourceConfiguration;
	_tmd__SetVideoSourceConfigurationResponse tmd__SetVideoSourceConfigurationResponse;
	tmd__SetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___tmd__SetVideoSourceConfiguration(soap, &soap_tmp___tmd__SetVideoSourceConfiguration);
	if (!soap_get___tmd__SetVideoSourceConfiguration(soap, &soap_tmp___tmd__SetVideoSourceConfiguration, "-tmd:SetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetVideoSourceConfiguration(soap_tmp___tmd__SetVideoSourceConfiguration.tmd__SetVideoSourceConfiguration, tmd__SetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__SetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetVideoSourceConfigurationResponse.soap_put(soap, "tmd:SetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetVideoSourceConfigurationResponse.soap_put(soap, "tmd:SetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetVideoOutputConfiguration(DeviceIOBindingService *soap)
{	struct __tmd__SetVideoOutputConfiguration soap_tmp___tmd__SetVideoOutputConfiguration;
	_tmd__SetVideoOutputConfigurationResponse tmd__SetVideoOutputConfigurationResponse;
	tmd__SetVideoOutputConfigurationResponse.soap_default(soap);
	soap_default___tmd__SetVideoOutputConfiguration(soap, &soap_tmp___tmd__SetVideoOutputConfiguration);
	if (!soap_get___tmd__SetVideoOutputConfiguration(soap, &soap_tmp___tmd__SetVideoOutputConfiguration, "-tmd:SetVideoOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetVideoOutputConfiguration(soap_tmp___tmd__SetVideoOutputConfiguration.tmd__SetVideoOutputConfiguration, tmd__SetVideoOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__SetVideoOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetVideoOutputConfigurationResponse.soap_put(soap, "tmd:SetVideoOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetVideoOutputConfigurationResponse.soap_put(soap, "tmd:SetVideoOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetAudioSourceConfiguration(DeviceIOBindingService *soap)
{	struct __tmd__SetAudioSourceConfiguration soap_tmp___tmd__SetAudioSourceConfiguration;
	_tmd__SetAudioSourceConfigurationResponse tmd__SetAudioSourceConfigurationResponse;
	tmd__SetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___tmd__SetAudioSourceConfiguration(soap, &soap_tmp___tmd__SetAudioSourceConfiguration);
	if (!soap_get___tmd__SetAudioSourceConfiguration(soap, &soap_tmp___tmd__SetAudioSourceConfiguration, "-tmd:SetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetAudioSourceConfiguration(soap_tmp___tmd__SetAudioSourceConfiguration.tmd__SetAudioSourceConfiguration, tmd__SetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__SetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetAudioSourceConfigurationResponse.soap_put(soap, "tmd:SetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetAudioSourceConfigurationResponse.soap_put(soap, "tmd:SetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetAudioOutputConfiguration(DeviceIOBindingService *soap)
{	struct __tmd__SetAudioOutputConfiguration soap_tmp___tmd__SetAudioOutputConfiguration;
	_tmd__SetAudioOutputConfigurationResponse tmd__SetAudioOutputConfigurationResponse;
	tmd__SetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___tmd__SetAudioOutputConfiguration(soap, &soap_tmp___tmd__SetAudioOutputConfiguration);
	if (!soap_get___tmd__SetAudioOutputConfiguration(soap, &soap_tmp___tmd__SetAudioOutputConfiguration, "-tmd:SetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetAudioOutputConfiguration(soap_tmp___tmd__SetAudioOutputConfiguration.tmd__SetAudioOutputConfiguration, tmd__SetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__SetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetAudioOutputConfigurationResponse.soap_put(soap, "tmd:SetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetAudioOutputConfigurationResponse.soap_put(soap, "tmd:SetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetVideoSourceConfigurationOptions(DeviceIOBindingService *soap)
{	struct __tmd__GetVideoSourceConfigurationOptions soap_tmp___tmd__GetVideoSourceConfigurationOptions;
	_tmd__GetVideoSourceConfigurationOptionsResponse tmd__GetVideoSourceConfigurationOptionsResponse;
	tmd__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___tmd__GetVideoSourceConfigurationOptions(soap, &soap_tmp___tmd__GetVideoSourceConfigurationOptions);
	if (!soap_get___tmd__GetVideoSourceConfigurationOptions(soap, &soap_tmp___tmd__GetVideoSourceConfigurationOptions, "-tmd:GetVideoSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoSourceConfigurationOptions(soap_tmp___tmd__GetVideoSourceConfigurationOptions.tmd__GetVideoSourceConfigurationOptions, tmd__GetVideoSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetVideoSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "tmd:GetVideoSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "tmd:GetVideoSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetVideoOutputConfigurationOptions(DeviceIOBindingService *soap)
{	struct __tmd__GetVideoOutputConfigurationOptions soap_tmp___tmd__GetVideoOutputConfigurationOptions;
	_tmd__GetVideoOutputConfigurationOptionsResponse tmd__GetVideoOutputConfigurationOptionsResponse;
	tmd__GetVideoOutputConfigurationOptionsResponse.soap_default(soap);
	soap_default___tmd__GetVideoOutputConfigurationOptions(soap, &soap_tmp___tmd__GetVideoOutputConfigurationOptions);
	if (!soap_get___tmd__GetVideoOutputConfigurationOptions(soap, &soap_tmp___tmd__GetVideoOutputConfigurationOptions, "-tmd:GetVideoOutputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVideoOutputConfigurationOptions(soap_tmp___tmd__GetVideoOutputConfigurationOptions.tmd__GetVideoOutputConfigurationOptions, tmd__GetVideoOutputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetVideoOutputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetVideoOutputConfigurationOptionsResponse.soap_put(soap, "tmd:GetVideoOutputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetVideoOutputConfigurationOptionsResponse.soap_put(soap, "tmd:GetVideoOutputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetAudioSourceConfigurationOptions(DeviceIOBindingService *soap)
{	struct __tmd__GetAudioSourceConfigurationOptions soap_tmp___tmd__GetAudioSourceConfigurationOptions;
	_tmd__GetAudioSourceConfigurationOptionsResponse tmd__GetAudioSourceConfigurationOptionsResponse;
	tmd__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___tmd__GetAudioSourceConfigurationOptions(soap, &soap_tmp___tmd__GetAudioSourceConfigurationOptions);
	if (!soap_get___tmd__GetAudioSourceConfigurationOptions(soap, &soap_tmp___tmd__GetAudioSourceConfigurationOptions, "-tmd:GetAudioSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioSourceConfigurationOptions(soap_tmp___tmd__GetAudioSourceConfigurationOptions.tmd__GetAudioSourceConfigurationOptions, tmd__GetAudioSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetAudioSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "tmd:GetAudioSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "tmd:GetAudioSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetAudioOutputConfigurationOptions(DeviceIOBindingService *soap)
{	struct __tmd__GetAudioOutputConfigurationOptions soap_tmp___tmd__GetAudioOutputConfigurationOptions;
	_tmd__GetAudioOutputConfigurationOptionsResponse tmd__GetAudioOutputConfigurationOptionsResponse;
	tmd__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	soap_default___tmd__GetAudioOutputConfigurationOptions(soap, &soap_tmp___tmd__GetAudioOutputConfigurationOptions);
	if (!soap_get___tmd__GetAudioOutputConfigurationOptions(soap, &soap_tmp___tmd__GetAudioOutputConfigurationOptions, "-tmd:GetAudioOutputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAudioOutputConfigurationOptions(soap_tmp___tmd__GetAudioOutputConfigurationOptions.tmd__GetAudioOutputConfigurationOptions, tmd__GetAudioOutputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetAudioOutputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "tmd:GetAudioOutputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "tmd:GetAudioOutputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetRelayOutputs(DeviceIOBindingService *soap)
{	struct __tmd__GetRelayOutputs soap_tmp___tmd__GetRelayOutputs;
	_tds__GetRelayOutputsResponse tds__GetRelayOutputsResponse;
	tds__GetRelayOutputsResponse.soap_default(soap);
	soap_default___tmd__GetRelayOutputs(soap, &soap_tmp___tmd__GetRelayOutputs);
	if (!soap_get___tmd__GetRelayOutputs(soap, &soap_tmp___tmd__GetRelayOutputs, "-tmd:GetRelayOutputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetRelayOutputs(soap_tmp___tmd__GetRelayOutputs.tds__GetRelayOutputs, tds__GetRelayOutputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tds__GetRelayOutputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tds__GetRelayOutputsResponse.soap_put(soap, "tds:GetRelayOutputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tds__GetRelayOutputsResponse.soap_put(soap, "tds:GetRelayOutputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetRelayOutputSettings(DeviceIOBindingService *soap)
{	struct __tmd__SetRelayOutputSettings soap_tmp___tmd__SetRelayOutputSettings;
	_tmd__SetRelayOutputSettingsResponse tmd__SetRelayOutputSettingsResponse;
	tmd__SetRelayOutputSettingsResponse.soap_default(soap);
	soap_default___tmd__SetRelayOutputSettings(soap, &soap_tmp___tmd__SetRelayOutputSettings);
	if (!soap_get___tmd__SetRelayOutputSettings(soap, &soap_tmp___tmd__SetRelayOutputSettings, "-tmd:SetRelayOutputSettings", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetRelayOutputSettings(soap_tmp___tmd__SetRelayOutputSettings.tmd__SetRelayOutputSettings, tmd__SetRelayOutputSettingsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__SetRelayOutputSettingsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetRelayOutputSettingsResponse.soap_put(soap, "tmd:SetRelayOutputSettingsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetRelayOutputSettingsResponse.soap_put(soap, "tmd:SetRelayOutputSettingsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetRelayOutputState(DeviceIOBindingService *soap)
{	struct __tmd__SetRelayOutputState soap_tmp___tmd__SetRelayOutputState;
	_tds__SetRelayOutputStateResponse tds__SetRelayOutputStateResponse;
	tds__SetRelayOutputStateResponse.soap_default(soap);
	soap_default___tmd__SetRelayOutputState(soap, &soap_tmp___tmd__SetRelayOutputState);
	if (!soap_get___tmd__SetRelayOutputState(soap, &soap_tmp___tmd__SetRelayOutputState, "-tmd:SetRelayOutputState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetRelayOutputState(soap_tmp___tmd__SetRelayOutputState.tds__SetRelayOutputState, tds__SetRelayOutputStateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tds__SetRelayOutputStateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tds__SetRelayOutputStateResponse.soap_put(soap, "tds:SetRelayOutputStateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tds__SetRelayOutputStateResponse.soap_put(soap, "tds:SetRelayOutputStateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetDigitalInputs(DeviceIOBindingService *soap)
{	struct __tmd__GetDigitalInputs soap_tmp___tmd__GetDigitalInputs;
	_tmd__GetDigitalInputsResponse tmd__GetDigitalInputsResponse;
	tmd__GetDigitalInputsResponse.soap_default(soap);
	soap_default___tmd__GetDigitalInputs(soap, &soap_tmp___tmd__GetDigitalInputs);
	if (!soap_get___tmd__GetDigitalInputs(soap, &soap_tmp___tmd__GetDigitalInputs, "-tmd:GetDigitalInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDigitalInputs(soap_tmp___tmd__GetDigitalInputs.tmd__GetDigitalInputs, tmd__GetDigitalInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetDigitalInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetDigitalInputsResponse.soap_put(soap, "tmd:GetDigitalInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetDigitalInputsResponse.soap_put(soap, "tmd:GetDigitalInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetDigitalInputConfigurationOptions(DeviceIOBindingService *soap)
{	struct __tmd__GetDigitalInputConfigurationOptions soap_tmp___tmd__GetDigitalInputConfigurationOptions;
	_tmd__GetDigitalInputConfigurationOptionsResponse tmd__GetDigitalInputConfigurationOptionsResponse;
	tmd__GetDigitalInputConfigurationOptionsResponse.soap_default(soap);
	soap_default___tmd__GetDigitalInputConfigurationOptions(soap, &soap_tmp___tmd__GetDigitalInputConfigurationOptions);
	if (!soap_get___tmd__GetDigitalInputConfigurationOptions(soap, &soap_tmp___tmd__GetDigitalInputConfigurationOptions, "-tmd:GetDigitalInputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDigitalInputConfigurationOptions(soap_tmp___tmd__GetDigitalInputConfigurationOptions.tmd__GetDigitalInputConfigurationOptions, tmd__GetDigitalInputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetDigitalInputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetDigitalInputConfigurationOptionsResponse.soap_put(soap, "tmd:GetDigitalInputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetDigitalInputConfigurationOptionsResponse.soap_put(soap, "tmd:GetDigitalInputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetDigitalInputConfigurations(DeviceIOBindingService *soap)
{	struct __tmd__SetDigitalInputConfigurations soap_tmp___tmd__SetDigitalInputConfigurations;
	_tmd__SetDigitalInputConfigurationsResponse tmd__SetDigitalInputConfigurationsResponse;
	tmd__SetDigitalInputConfigurationsResponse.soap_default(soap);
	soap_default___tmd__SetDigitalInputConfigurations(soap, &soap_tmp___tmd__SetDigitalInputConfigurations);
	if (!soap_get___tmd__SetDigitalInputConfigurations(soap, &soap_tmp___tmd__SetDigitalInputConfigurations, "-tmd:SetDigitalInputConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetDigitalInputConfigurations(soap_tmp___tmd__SetDigitalInputConfigurations.tmd__SetDigitalInputConfigurations, tmd__SetDigitalInputConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__SetDigitalInputConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetDigitalInputConfigurationsResponse.soap_put(soap, "tmd:SetDigitalInputConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetDigitalInputConfigurationsResponse.soap_put(soap, "tmd:SetDigitalInputConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetSerialPorts(DeviceIOBindingService *soap)
{	struct __tmd__GetSerialPorts soap_tmp___tmd__GetSerialPorts;
	_tmd__GetSerialPortsResponse tmd__GetSerialPortsResponse;
	tmd__GetSerialPortsResponse.soap_default(soap);
	soap_default___tmd__GetSerialPorts(soap, &soap_tmp___tmd__GetSerialPorts);
	if (!soap_get___tmd__GetSerialPorts(soap, &soap_tmp___tmd__GetSerialPorts, "-tmd:GetSerialPorts", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSerialPorts(soap_tmp___tmd__GetSerialPorts.tmd__GetSerialPorts, tmd__GetSerialPortsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetSerialPortsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetSerialPortsResponse.soap_put(soap, "tmd:GetSerialPortsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetSerialPortsResponse.soap_put(soap, "tmd:GetSerialPortsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetSerialPortConfiguration(DeviceIOBindingService *soap)
{	struct __tmd__GetSerialPortConfiguration soap_tmp___tmd__GetSerialPortConfiguration;
	_tmd__GetSerialPortConfigurationResponse tmd__GetSerialPortConfigurationResponse;
	tmd__GetSerialPortConfigurationResponse.soap_default(soap);
	soap_default___tmd__GetSerialPortConfiguration(soap, &soap_tmp___tmd__GetSerialPortConfiguration);
	if (!soap_get___tmd__GetSerialPortConfiguration(soap, &soap_tmp___tmd__GetSerialPortConfiguration, "-tmd:GetSerialPortConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSerialPortConfiguration(soap_tmp___tmd__GetSerialPortConfiguration.tmd__GetSerialPortConfiguration, tmd__GetSerialPortConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetSerialPortConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetSerialPortConfigurationResponse.soap_put(soap, "tmd:GetSerialPortConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetSerialPortConfigurationResponse.soap_put(soap, "tmd:GetSerialPortConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetSerialPortConfiguration(DeviceIOBindingService *soap)
{	struct __tmd__SetSerialPortConfiguration soap_tmp___tmd__SetSerialPortConfiguration;
	_tmd__SetSerialPortConfigurationResponse tmd__SetSerialPortConfigurationResponse;
	tmd__SetSerialPortConfigurationResponse.soap_default(soap);
	soap_default___tmd__SetSerialPortConfiguration(soap, &soap_tmp___tmd__SetSerialPortConfiguration);
	if (!soap_get___tmd__SetSerialPortConfiguration(soap, &soap_tmp___tmd__SetSerialPortConfiguration, "-tmd:SetSerialPortConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetSerialPortConfiguration(soap_tmp___tmd__SetSerialPortConfiguration.tmd__SetSerialPortConfiguration, tmd__SetSerialPortConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__SetSerialPortConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetSerialPortConfigurationResponse.soap_put(soap, "tmd:SetSerialPortConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetSerialPortConfigurationResponse.soap_put(soap, "tmd:SetSerialPortConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetSerialPortConfigurationOptions(DeviceIOBindingService *soap)
{	struct __tmd__GetSerialPortConfigurationOptions soap_tmp___tmd__GetSerialPortConfigurationOptions;
	_tmd__GetSerialPortConfigurationOptionsResponse tmd__GetSerialPortConfigurationOptionsResponse;
	tmd__GetSerialPortConfigurationOptionsResponse.soap_default(soap);
	soap_default___tmd__GetSerialPortConfigurationOptions(soap, &soap_tmp___tmd__GetSerialPortConfigurationOptions);
	if (!soap_get___tmd__GetSerialPortConfigurationOptions(soap, &soap_tmp___tmd__GetSerialPortConfigurationOptions, "-tmd:GetSerialPortConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSerialPortConfigurationOptions(soap_tmp___tmd__GetSerialPortConfigurationOptions.tmd__GetSerialPortConfigurationOptions, tmd__GetSerialPortConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__GetSerialPortConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetSerialPortConfigurationOptionsResponse.soap_put(soap, "tmd:GetSerialPortConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetSerialPortConfigurationOptionsResponse.soap_put(soap, "tmd:GetSerialPortConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SendReceiveSerialCommand(DeviceIOBindingService *soap)
{	struct __tmd__SendReceiveSerialCommand soap_tmp___tmd__SendReceiveSerialCommand;
	_tmd__SendReceiveSerialCommandResponse tmd__SendReceiveSerialCommandResponse;
	tmd__SendReceiveSerialCommandResponse.soap_default(soap);
	soap_default___tmd__SendReceiveSerialCommand(soap, &soap_tmp___tmd__SendReceiveSerialCommand);
	if (!soap_get___tmd__SendReceiveSerialCommand(soap, &soap_tmp___tmd__SendReceiveSerialCommand, "-tmd:SendReceiveSerialCommand", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SendReceiveSerialCommand(soap_tmp___tmd__SendReceiveSerialCommand.tmd__SendReceiveSerialCommand, tmd__SendReceiveSerialCommandResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tmd__SendReceiveSerialCommandResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SendReceiveSerialCommandResponse.soap_put(soap, "tmd:SendReceiveSerialCommandResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SendReceiveSerialCommandResponse.soap_put(soap, "tmd:SendReceiveSerialCommandResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
